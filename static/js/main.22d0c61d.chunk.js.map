{"version":3,"sources":["components/Prices.jsx","components/Portfolios.jsx","components/PricesGuide.jsx","components/PortfoliosGuide.jsx","components/PricesSettings.jsx","components/Login.jsx","components/AddWatchlist.jsx","components/ManageCoins.jsx","components/RenameWatchlist.jsx","components/DeleteWatchlist.jsx","components/EditWatchlist.jsx","components/AddPortfolio.jsx","components/RenamePortfolio.jsx","components/DeletePortfolio.jsx","components/EditPortfolio.jsx","components/BuyAsset.jsx","components/SellAsset.jsx","components/BuySellAsset.jsx","components/AssetDetails.jsx","components/Transactions.jsx","components/SellCurrentAsset.jsx","components/DeleteAsset.jsx","components/EditAsset.jsx","components/EditTransaction.jsx","App.js","reportWebVitals.js","index.js"],"names":["Prices","state","watchlistDropdownValue","handleWatchlistDropdownChange","e","value","Number","parseInt","target","setState","props","setCurrentIndex","idToIndexConverter","id","loggedInUser","watchlists","findIndex","watchlist","handleSortColumn","colNum","handleDataSort","dataSort","prices","isUp","index","this","currentWatchlist","watchlistDropdown","map","name","coins","length","coinListCreator","sort","compareFunction","sortProperty","coin","className","src","logo","alt","symbol","coinName","priceColorSetter","price_change","priceConverter","coinId","aria-hidden","onClick","makePopupVisible","onChange","arrows","Component","Portfolios","portfolioDropdownValue","handlePortfolioDropdownChange","portfolios","portfolio","handleAssetDetailsButtonClick","currentPortfolio","assets","asset","coin_id","portfolioTitle","portfolioDropdown","portfolioBookValue","bought_value","reduce","acc","portfolioCurrentValue","parseFloat","current_quantity","coinFinder","price_eur","toFixed","portfolioTotalValue","sold_value","portfolioYield","amountConverter","toLocaleString","portfolioTotals","portfolioAssets","current_value","maximumFractionDigits","quantity_scale","absolute_yield","percentage_yield","PricesGuide","PortfoliosGuide","PricesSettings","selectedCurrency","handleSelectCurrency","handleClickOkButton","handleCurrencyChange","base_currency","htmlFor","type","Login","nameInput","handleInputChange","handleLoginClick","handleUserLogin","alert","handleRegisterClick","handleUserRegister","handleOkClick","getUserData","errorMessage","loginContainer","loginMessage","AddWatchlist","watchlistName","handleClickAddButton","handleCreateNewWatchlist","handleClickCancelButton","clearErrorMessage","ManageCoins","symbolInput","handleSymbolInputChange","toUpperCase","handleClickOnListItem","filter","x","addWatchlistItem","handleClickCloseButton","symbolList","watchlistItems","deleteWatchlistItem","list","autoComplete","RenameWatchlist","handleNameInputChange","slice","handleClickRenameButton","renameWatchlist","DeleteWatchlist","handleClickDeleteButton","deleteWatchlist","EditWatchlist","page","handleTabChange","newpage","Page","manageClass","renameClass","deleteClass","AddPortfolio","portfolioName","handleCreateNewPortfolio","RenamePortfolio","renamePortfolio","DeletePortfolio","deletePortfolio","EditPortfolio","BuyAsset","quantity","price","price_scale","date","disabledInput","Date","toISOString","substring","handleQuantityInputChange","inputDecimalSetter","scale","handlePriceInputChange","handleDateInputChange","handleClickBuyButton","currentDate","purchaseDate","addTransactionToPortfolio","portfolioItems","min","step","disabled","SellAsset","handleClickSellButton","selectedAsset","selectedAssetTransactions","transactions","transaction","push","transactionQuantityChecker","BuySellAsset","buyClass","sellClass","AssetDetails","currentAsset","currentValue","absoluteYield","percentageYield","assetShare","total_buy_quantity","valueConverter","total_sell_quantity","apy","Transactions","handleClickEditTransactionIcon","handleClickDeleteTransactionIcon","buy_sell","checkedTransactions","trans","deleteTransaction","assetTransactions","SellCurrentAsset","readOnly","DeleteAsset","deleteAsset","EditAsset","detailsClass","transactionsClass","EditTransaction","buysell","currentTransaction","handleClickEditButton","transactionDate","editTransaction","App","currentIndexes","popups","handlePageChange","popupName","direction","newPopups","JSON","parse","stringify","currency","newUserData","price_usd","usdEurRate","amount","priceChange","username","a","data","fetchOptions","method","headers","body","fetch","response","json","result","message","users","handleUserLogout","apyCalculator","sortedBuyTransactions","toJSON","firstBuyDate","averageYield","daysOfInvestment","i","date1","numOfDays","investmentDays","days","elem","currentYear","getFullYear","numberOfDays","numberOfYears","numberOfDaysInLastYear","getMonth","getDate","createAssetsFromTransactions","filteredAssets","assetTotalBuyQuantity","assetTotalSellQuantity","assetTotalBuyValue","assetTotalSellValue","average_buy_price","toPrecision","finaliseUserPortfolioData","tempPortfolio","watchlistsResponse","watchlistsResult","portfoliosResponse","portfoliosResult","tempPortfolios","newCurrentIndexes","property","newIndexes","window","confirm","watchlistId","userId","portfolioId","transactionId","order","b","comparison","newDataSort","totalQuantityUntilDate","indexOf","substr","pricesClass","portfoliosClass","pricesGuidePopup","portfoliosGuidePopup","pricesSettingsPopup","addWatchlistPopup","addPortfolioPopup","editWatchlistPopup","editPortfolioPopup","editAssetPopup","buySellAssetPopup","editTransactionPopup","scrollable","popup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d0c61d.chunk.js","sourcesContent":["import '../../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './Prices.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Prices extends Component {\r\n\r\n    state = {\r\n        watchlistDropdownValue: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            watchlistDropdownValue: this.props.currentWatchlist\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.currentWatchlist !== this.state.watchlistDropdownValue) {\r\n            this.setState({\r\n                watchlistDropdownValue: this.props.currentWatchlist,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleWatchlistDropdownChange = (e) => {\r\n        const value = Number.parseInt(e.target.value, 10);\r\n        this.setState({\r\n            watchlistDropdownValue: value,\r\n        });\r\n        this.props.setCurrentIndex(value, \"watchlist\");\r\n    }\r\n\r\n    idToIndexConverter = (id) => {\r\n        return this.props.loggedInUser.watchlists.findIndex(watchlist => watchlist.id === id);\r\n    }\r\n\r\n    handleSortColumn = (colNum) => {\r\n        switch (colNum) {\r\n            case 0:\r\n                this.props.handleDataSort(0, \"prices\", this.props.dataSort.prices.isUp, \"symbol\");\r\n                break;\r\n            case 1:\r\n                if (this.props.dataSort.prices.index === 1 && this.props.dataSort.prices.isUp) {\r\n                    this.props.handleDataSort(1, \"prices\", true, \"price_eur\");\r\n                } else if (this.props.dataSort.prices.index === 1 && !this.props.dataSort.prices.isUp) {\r\n                    this.props.handleDataSort(2, \"prices\", false, \"price_change\");\r\n                } else if (this.props.dataSort.prices.index === 2 && this.props.dataSort.prices.isUp) {\r\n                    this.props.handleDataSort(2, \"prices\", true, \"price_change\");\r\n                } else {\r\n                    this.props.handleDataSort(1, \"prices\", false, \"price_eur\");\r\n                }\r\n                break;\r\n            default:\r\n                this.props.handleDataSort(0, \"prices\", false, \"symbol\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const watchlistDropdown = this.props.loggedInUser.watchlists\r\n            .map(watchlist => <option value={this.idToIndexConverter(watchlist.id)} key={watchlist.id}>{watchlist.name}</option>);\r\n\r\n        const coins = this.props.loggedInUser.watchlists.length === 0 ? \"\" : this.props.coinListCreator()\r\n            .sort(this.props.compareFunction(this.props.dataSort.prices.sortProperty, this.props.dataSort.prices.isUp))\r\n            .map(coin => <div className=\"price-item\" key={coin.coinId}>\r\n                <div className=\"ticker\">\r\n                    <div className=\"ticker-image\"><img src={coin.logo} alt={`${coin.symbol} icon`} /></div>\r\n                    <div>\r\n                        <p className=\"ticker-symbol\">{`${coin.symbol}`}</p>\r\n                        <p className=\"ticker-name\">{`${coin.coinName}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"watchlist-price\">\r\n                    <p className={`ticker-price ${this.props.priceColorSetter(coin.price_change)}`}>{this.props.priceConverter(coin)}</p>\r\n                    <p className={`ticker-price-change ${this.props.priceColorSetter(coin.price_change)}`}>{coin.price_change} %</p>\r\n                </div>\r\n            </div>\r\n            );\r\n\r\n        return (\r\n            <div className=\"page-menu-container\">\r\n                <div className=\"page-menu-settings-container\">\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-plus-square\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"AddWatchlist\", true)}></i></p>\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-pencil\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"EditWatchlist\", true)}></i></p>\r\n                        <select name=\"watchlist-dropdown\" className=\"page-menu-dropdown\" value={this.state.watchlistDropdownValue} onChange={this.handleWatchlistDropdownChange} >{watchlistDropdown}</select>\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-cog\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PricesSettings\", true)}></i></p>\r\n                        <p className=\"page-menu-sign page-menu-question-sign\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PricesGuide\", true)}></i></p>\r\n                </div>\r\n                <div className=\"watchlist-header\">\r\n                    <p className=\"sortable-column\" onClick={() => this.handleSortColumn(0)}>{`${this.props.dataSort.prices.arrows[0]} Coin`}</p>\r\n                    <p className=\"sortable-column\" onClick={() => this.handleSortColumn(1)}>{`${this.props.dataSort.prices.arrows[1]} Price/Change ${this.props.dataSort.prices.arrows[2]}`}</p>\r\n                </div>\r\n                <div className=\"watchlist-assets\">\r\n                    {coins}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './Portfolios.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Portfolios extends Component {\r\n\r\n    state = {\r\n        portfolioDropdownValue: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            portfolioDropdownValue: this.props.currentPortfolio,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.currentPortfolio !== this.state.portfolioDropdownValue) {\r\n            this.setState({\r\n                portfolioDropdownValue: this.props.currentPortfolio,\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePortfolioDropdownChange = (e) => {\r\n        const value = Number.parseInt(e.target.value);\r\n        this.setState({\r\n            portfolioDropdownValue: value,\r\n        });\r\n        this.props.setCurrentIndex(value, \"portfolio\");\r\n    }\r\n\r\n    idToIndexConverter = (id) => {\r\n        return this.props.loggedInUser.portfolios.findIndex(portfolio => portfolio.id === id);\r\n    }\r\n\r\n    handleAssetDetailsButtonClick = (id) => {\r\n        const index = this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets.findIndex(asset => asset.coin_id === id);\r\n        this.props.setCurrentIndex(index, \"asset\");\r\n        this.props.makePopupVisible(\"EditAsset\", true);\r\n    }\r\n\r\n    handleSortColumn = (colNum) => {\r\n        switch (colNum) {\r\n            case 0:\r\n                this.props.handleDataSort(0, \"portfolios\", this.props.dataSort.portfolios.isUp, \"symbol\");\r\n                break;\r\n            case 1:\r\n                if (this.props.dataSort.portfolios.index === 1 && this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(1, \"portfolios\", true, \"current_value\");\r\n                } else if (this.props.dataSort.portfolios.index === 1 && !this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(2, \"portfolios\", false, \"current_quantity\");\r\n                } else if (this.props.dataSort.portfolios.index === 2 && this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(2, \"portfolios\", true, \"current_quantity\");\r\n                } else {\r\n                    this.props.handleDataSort(1, \"portfolios\", false, \"current_value\");\r\n                }\r\n                break;\r\n            case 2:\r\n                if (this.props.dataSort.portfolios.index === 3 && this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(3, \"portfolios\", true, \"absolute_yield\");\r\n                } else if (this.props.dataSort.portfolios.index === 3 && !this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(4, \"portfolios\", false, \"percentage_yield\");\r\n                } else if (this.props.dataSort.portfolios.index === 4 && this.props.dataSort.portfolios.isUp) {\r\n                    this.props.handleDataSort(4, \"portfolios\", true, \"percentage_yield\");\r\n                } else {\r\n                    this.props.handleDataSort(3, \"portfolios\", false, \"absolute_yield\");\r\n                }\r\n                break;\r\n            default:\r\n                this.props.handleDataSort(0, \"portfolios\", false, \"symbol\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n\r\n        const portfolioTitle = <p className=\"portfolio-name\"><i className=\"fa fa-money page-menu-sign\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"BuySellAsset\", true)}></i>{currentPortfolio.name}</p>;\r\n\r\n        const portfolioDropdown = this.props.loggedInUser.portfolios.map(portfolio => <option value={this.idToIndexConverter(portfolio.id)} key={portfolio.id}>{portfolio.name}</option>);\r\n\r\n        const portfolioTotals = (assets) => {\r\n            if (assets.length > 0) {\r\n            const portfolioBookValue = assets.map(asset => asset.bought_value).reduce((acc, value) => acc + value, 0);\r\n            const portfolioCurrentValue = Number.parseFloat((assets.map(asset => asset.current_quantity * this.props.coinFinder(asset.coin_id).price_eur).reduce((acc, value) => acc + value, 0)).toFixed(2));\r\n            const portfolioTotalValue = Number.parseFloat((assets.map(asset => asset.current_quantity * this.props.coinFinder(asset.coin_id).price_eur + asset.sold_value).reduce((acc, value) => acc + value, 0)).toFixed(2));\r\n            const portfolioYield = portfolioBookValue === 0 ? 0 : Number.parseFloat(((portfolioTotalValue / portfolioBookValue - 1) * 100).toFixed(2))\r\n            return <div className=\"portfolio-totals\">\r\n                        <p className=\"portfolio-total-value\">{this.props.amountConverter(portfolioCurrentValue)}</p>\r\n                        <p className={`portfolio-total-yield ${this.props.priceColorSetter(portfolioYield)}`}>{`${portfolioYield.toLocaleString('en-GB')} %`}</p>\r\n                    </div>;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        const portfolioAssets = (assets) => {\r\n\r\n            if (assets.length > 0) {\r\n                const portfolioAssets = [...assets]\r\n                .sort(this.props.compareFunction(this.props.dataSort.portfolios.sortProperty, this.props.dataSort.portfolios.isUp))\r\n                .map(asset => {\r\n\r\n                    return <div className=\"asset-container\" key={asset.coin_id}>\r\n                        <div className=\"asset-item asset-name\">\r\n                            <div className=\"asset-icon\"><img src={this.props.coinFinder(asset.coin_id).logo} alt={`${this.props.coinFinder(asset.coin_id).symbol} icon`} /></div>\r\n                            <p>{this.props.coinFinder(asset.coin_id).symbol}</p>\r\n                        </div>\r\n                        <div className=\"asset-item asset-property\">\r\n                            <p>{this.props.amountConverter(asset.current_value)}</p>\r\n                            <p>{asset.current_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(asset.coin_id).quantity_scale })}</p>\r\n                        </div>\r\n                        <div className=\"asset-item asset-property\">\r\n                            <p className={`${this.props.priceColorSetter(asset.absolute_yield)}`}>{this.props.amountConverter(asset.absolute_yield)}</p>\r\n                            <p className={`${this.props.priceColorSetter(asset.percentage_yield)}`}>{`${asset.percentage_yield.toFixed(2)} %`}</p>\r\n                        </div>\r\n                        <div className=\"asset-item asset-settings\" onClick={() => this.handleAssetDetailsButtonClick(asset.coin_id)}>\r\n                            <i className=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                    </div>\r\n                });\r\n\r\n                return <div className=\"portfolio-table\">\r\n                            <div className=\"portfolio-header\">\r\n                                <p className=\"sortable-column\" onClick={() => this.handleSortColumn(0)}>{`${this.props.dataSort.portfolios.arrows[0]} Coin`}</p>\r\n                                <p className=\"sortable-column\" onClick={() => this.handleSortColumn(1)}>{`${this.props.dataSort.portfolios.arrows[1]} Value/Position ${this.props.dataSort.portfolios.arrows[2]}`}</p>\r\n                                <p className=\"sortable-column\" onClick={() => this.handleSortColumn(2)}>{`${this.props.dataSort.portfolios.arrows[3]} Yield €/% ${this.props.dataSort.portfolios.arrows[4]}`}</p>\r\n                            </div>\r\n                            <div className=\"portfolio-assets\">\r\n                                {portfolioAssets}\r\n                            </div>\r\n                        </div>;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-menu-container\">\r\n                <div className=\"page-menu-settings-container\">\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-plus-square\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"AddPortfolio\", true)}></i></p>\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-pencil\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"EditPortfolio\", true)}></i></p>\r\n                        <select name=\"portfolio-dropdown\" className=\"page-menu-dropdown\" value={this.state.portfolioDropdownValue} onChange={this.handlePortfolioDropdownChange}>{portfolioDropdown}</select>\r\n                        <p className=\"page-menu-sign\"><i className=\"fa fa-cog\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PricesSettings\", true)}></i></p>\r\n                        <p className=\"page-menu-sign page-menu-question-sign\"><i className=\"fa fa-question-circle\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PortfoliosGuide\", true)}></i></p>\r\n                </div>\r\n                {portfolioTitle}\r\n                {portfolioTotals(this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets)}\r\n                {portfolioAssets(this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets)}\r\n            </div>\r\n        )\r\n    }\r\n}","import './Guides.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class PricesGuide extends Component {\r\n\r\n    render() {\r\n        //console.log(this.props.loggedInUser)\r\n\r\n        return (\r\n            <div className=\"guide-background\">\r\n                <div className=\"guide-popup\">\r\n                    <div className=\"guide-close\">\r\n                        <p><i className=\"fa fa-times\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PricesGuide\", false)}></i></p>\r\n                    </div>\r\n                    <div className=\"guide-text\">\r\n                        <h2 className=\"guide-main-header\">Crypto Portfolio Manager Guide</h2>\r\n                        <h3 className=\"guide-page-header\">Prices Page</h3>\r\n                        <p className=\"guide-normal-text\">The Crypto Portfolio Manager is divided into two main pages, Prices and Portfolios.\r\n                            You can change between them by clicking on the Prices/Portfolios links.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\">On the Prices page, you can manage your watchlists. Watchlists are lists of coins\r\n                            you include to monitor their price change. When you register, you are assigned\r\n                            a Default watchlist that consists of Bitcoin (BTC), Ethereum (ETH) and USDT.\r\n                            You can manage your watchlists with the menu below the Prices/Portfolios links by:</p>\r\n                        <ul className=\"guide-list\">\r\n                            <li>adding new watchlists - <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></li>\r\n                            <li>editing your created watchlists - <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></li>\r\n                            <li>selecting from already created watchlists (dropdown menu)</li>\r\n                            <li>setting your preferred viewing currency (EUR, USD) - <i className=\"fa fa-cog\" aria-hidden=\"true\"></i></li>\r\n                        </ul>\r\n                        <h4 className=\"guide-subheader\">Add Watchlist - <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">In the Add Watchlist popup, enter a name for your new watchlist you would like to create,\r\n                            then click the Add button. Watchlist names should be unique.\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Edit Watchlist - <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">The Edit Watchlist popup always effects the selected watchlist. If you added a new watchlist,\r\n                            and have more than one, you can select between them using the dropdown list.\r\n                            The Edit Watchlist popup lets you manage the coins in the selected watchlist, rename the watchlist\r\n                            or delete the watchlist. There is a menu row for you to select the action you would like to carry out.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Adding a new coin:</b></p>\r\n                        <p className=\"guide-normal-text\">Click on the Manage Coins menu item, then click in the Add coin dropdown list, and select the coin you would like to add to your watchlist.\r\n                            Then click the Add button. You may also type in the field to narrow the search before clicking on any of the items.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Removing a coin:</b></p>\r\n                        <p className=\"guide-normal-text\">If you don't need one of the coins in your watchlist any more, you can remove it by clicking\r\n                            the trashcan <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> icon next to it.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Rename watchlist:</b></p>\r\n                        <p className=\"guide-normal-text\">Click on the Rename menu item, change the name of your watchlist in the Name field,\r\n                            then click the Rename button.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Delete watchlist:</b></p>\r\n                        <p className=\"guide-normal-text\">If you don't need a watchlist any more, click on the Delete menu item, then click the Delete button.\r\n                            The watchlist will be deleted permanently, meaning that if you still need it, you will have\r\n                            to create the watchlist and add the coins to it again.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\">If you finished editing your watchlist, close the popup window with the Close button.</p>\r\n                        <h4 className=\"guide-subheader\">Select Currency - <i className=\"fa fa-cog\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">To select your viewing currency, click on the cogwheel icon to open the Select Currency popup.\r\n                            You may change between EUR and USD in the Currency dropdown list.\r\n                            Note: the Portfolio Manager's basic currency is EUR. Prices and portfolio transactions\r\n                            are registered in EUR. When you change to USD, the portfolio manager will show you all prices and amounts\r\n                            in USD based on the current EUR/USD exchange price for your convenience,\r\n                            but all the portfolios are EUR based portfolios and transactions (buys and sells) are registered in EUR.\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Sorting</h4>\r\n                        <p className=\"guide-normal-text\">Coins in your watchlist can be sorted by clicking on the column headers. Click on the Coin header to sort\r\n                            by name (ascending order). Click on it again to sort in descending order. Click on the Price/Change header\r\n                            to sort by price or price change. Price change is for the last 24 hours. An arrow appears near the property\r\n                            used for sorting and shows the direction of sorting (up arrow ascending, down arrow descending).\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './Guides.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class PortfoliosGuide extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"guide-background\">\r\n                <div className=\"guide-popup\">\r\n                    <div className=\"guide-close\">\r\n                        <p><i className=\"fa fa-times\" aria-hidden=\"true\" onClick={() => this.props.makePopupVisible(\"PortfoliosGuide\", false)}></i></p>\r\n                    </div>\r\n                    <div className=\"guide-text\">\r\n                        <h2 className=\"guide-main-header\">Crypto Portfolio Manager Guide</h2>\r\n                        <h3 className=\"guide-page-header\">Portfolios Page</h3>\r\n                        <p className=\"guide-normal-text\">The Crypto Portfolio Manager is divided into two main pages, Prices and Portfolios.\r\n                            You can change between them by clicking on the Prices/Portfolios links.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\">On the Portfolios page, you can manage your portfolios.\r\n                            Portfolios consist of assets, which in turn are made up of buy and sell transactions in coins.\r\n                            When you register, you are assigned an empty Default portfolio.\r\n                            You can manage your portfolios with the menu below the Prices/Portfolios links by:</p>\r\n                        <ul className=\"guide-list\">\r\n                            <li>adding new portfolios - <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></li>\r\n                            <li>editing your created portfolios - <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></li>\r\n                            <li>selecting from already created portfolios (dropdown menu)</li>\r\n                            <li>setting your preferred viewing currency (EUR, USD) - <i className=\"fa fa-cog\" aria-hidden=\"true\"></i></li>\r\n                            <li>creating buy and sell transactions in the selected portfolio - <i className=\"fa fa-money\" aria-hidden=\"true\"></i></li>\r\n                            <li>editing assets and transactions in the selected portfolio - <i className=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i></li>\r\n                        </ul>\r\n                        <h4 className=\"guide-subheader\">Add Portfolio - <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">In the Add Portfolio popup, enter a name for your new portfolio you would like to create,\r\n                            then click the Add button. Portfolio names should be unique.\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Edit Portfolio - <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">The Edit Portfolio popup always effects the selected portfolio.\r\n                            If you added a new portfolio, and have more than one, you can select between them using the dropdown list.\r\n                            The Edit Portfolio popup lets you rename or delete the watchlist.\r\n                            There is a menu row for you to select the action you would like to carry out.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Rename portfolio:</b></p>\r\n                        <p className=\"guide-normal-text\">Click on the Rename menu item, change the name of your portfolio in the Name field,\r\n                            then click the Rename button.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\"><b>Delete portfolio:</b></p>\r\n                        <p className=\"guide-normal-text\">If you don't need a portfolio any more, click on the Delete menu item, then click the Delete button.\r\n                            The portfolio will be deleted permanently, meaning that if you still need it, you will have\r\n                            to create the portfolio and add the assets/transactions to it again.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\">If you finished editing your watchlist, close the popup window with the Close button.</p>\r\n                        <h4 className=\"guide-subheader\">Select Currency - <i className=\"fa fa-cog\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">To select your viewing currency, click on the cogwheel icon to open the Select Currency popup.\r\n                            You may change between EUR and USD in the Currency dropdown list.\r\n                            Note: the Portfolio Manager's basic currency is EUR. Prices and portfolio transactions\r\n                            are registered in EUR. When you change to USD, the portfolio manager will show you all prices and amounts\r\n                            in USD based on the current EUR/USD exchange price for your convenience,\r\n                            but all the portfolios are EUR based portfolios and transactions (buys and sells) are registered in EUR.\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Buy/Sell Asset - <i className=\"fa fa-money\" aria-hidden=\"true\"></i></h4>\r\n                        <p className=\"guide-normal-text\">This is where you can buy coins into your portfolio, or sell previously bought coins.\r\n                            The basic unit of this portfolio manager are transactions, which means that any asset in your portfolio\r\n                            is made up of transactions in coins. You can have as many transactions in a portfolio in one coin as you would like,\r\n                            and they will show up as one asset.</p>\r\n                        <p className=\"guide-normal-text\">To buy a coin, select it from the dropdown list first. You can also type in the Coin field to narrow the list.\r\n                            After selecting the coin, the other input fields become editable. Price and date fields will show the current price and date.\r\n                            Enter the purchased quantity, change the purchase price and the purchase date as required, then click Buy.\r\n                            The portfolio manager will warn you for errors and ommissions (e.g. you can't buy 0 coins).</p>\r\n                        <p className=\"guide-normal-text\">To sell a coin, select the coin you would like to sell. The portfolio manager will only offer you the list of coins\r\n                            you currently have in the selected portfolio, that is, it doesn't manage short selling. After the selection,\r\n                            all the other fields will become enabled and show you current quantity, price and date. Edit them as required,\r\n                            then clisk Sell.</p>\r\n                        <p className=\"guide-normal-text\">If you are done, click the Close button to close the Buy/Sell Asset popup window.</p>\r\n                        \r\n                        <h4 className=\"guide-subheader\">Sorting</h4>\r\n                        <p className=\"guide-normal-text\">Assets in your portfolio can be sorted by clicking on the column headers.\r\n                            Click on the Coin header to sort by name (ascending order). Click on it again to sort in descending order.\r\n                            You can also sort by asset value, current asset amount (position) as well as absolute and % asset yield in the same manner.\r\n                            An arrow appears near the property used for sorting and shows the direction of sorting (up arrow ascending, down arrow descending).\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Edit Asset</h4>\r\n                        <p className=\"guide-normal-text\">The Details tab of the Edit Asset popup window shows you detailed information about the asset\r\n                            and all the transactions in it. It also lets you sell or delete the selected asset.\r\n                            Selling works the same way as in the Buy/Sell Assets. To Delete an asset and all the related transactions,\r\n                            click on the Delete button. Note: this will delete all transactions done in this asset. You can edit and delete\r\n                            transaction individually to. See below.\r\n                        </p>\r\n                        <h4 className=\"guide-subheader\">Edit Transactions</h4>\r\n                        <p className=\"guide-normal-text\">When you click on the Transactions menu item, all the transactions done in the\r\n                            given asset is displayed sorted by date.</p>\r\n                        <p className=\"guide-normal-text\">To edit a transaction, click on the pencil icon <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>.\r\n                            The Edit Transaction popup window appears. You can only change the quantity, the price and/or the date.\r\n                            The portfolio manager will check the consistency of new and edited transactions with all the other\r\n                            transactions made in the given asset, and warn you for errors and ommissions.\r\n                        </p>\r\n                        <p className=\"guide-normal-text\">To delete a transaction, click on the trashcan <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> icon.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './Settings.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class PricesSettings extends Component {\r\n\r\n    state = {\r\n        selectedCurrency: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            selectedCurrency: this.props.loggedInUser.base_currency,\r\n        });\r\n    }\r\n\r\n    handleSelectCurrency = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            selectedCurrency: value,\r\n        });\r\n    }\r\n\r\n    handleClickOkButton = () => {\r\n        this.props.handleCurrencyChange(this.state.selectedCurrency);\r\n        this.props.makePopupVisible(\"PricesSettings\", false)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Select Currency</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>Click on the Currency dropdown list to select the currency in which the prices on the Prices tab are displayed.</p>\r\n                    </div>\r\n                    <div className=\"select-currency-container\">\r\n                        <label htmlFor=\"select-currency\" className=\"select-currency-label\">Currency: </label>\r\n                        <select className=\"select-currency-list\" value={this.state.selectedCurrency} onChange={this.handleSelectCurrency}>\r\n                            <option value=\"EUR\">EUR</option>\r\n                            <option value=\"USD\">USD</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"popup-button-container\">\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickOkButton}>OK</button>\r\n                        <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"PricesSettings\", false)}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './Login.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        nameInput: \"\",\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            nameInput: value,\r\n        });\r\n    }\r\n\r\n    handleLoginClick = () => {\r\n        if (this.state.nameInput) {\r\n            this.props.handleUserLogin(this.state.nameInput);\r\n        } else {\r\n            alert(\"Username cannot be empty\");\r\n        }\r\n    }\r\n\r\n    handleRegisterClick = () => {\r\n        if (this.state.nameInput) {\r\n            this.props.handleUserRegister(this.state.nameInput);\r\n        } else {\r\n            alert(\"Username cannot be empty\");\r\n        }\r\n    }\r\n\r\n    handleOkClick = () => {\r\n        this.props.getUserData();\r\n    }\r\n\r\n    render() {\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n        const loginContainer = this.props.loginMessage === \"\"\r\n            ?   <div className=\"login-container\">\r\n                    <div className=\"login-login\">\r\n                        <label htmlFor=\"username\" className=\"username-text\">Username</label>\r\n                        <input type=\"text\" className=\"username-input\" name=\"username\" onChange={this.handleInputChange}></input>\r\n                    </div>\r\n                    <button type=\"button\" className=\"login-button\" onClick={this.handleLoginClick}>Login</button>\r\n                    <div className=\"login-register\">\r\n                        <p className=\"register-text\">or enter a username and click</p>\r\n                        <button type=\"button\" className=\"register-button\" onClick={this.handleRegisterClick}>Register</button>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                </div>\r\n            :   <div className=\"login-container\">\r\n                    <div className=\"login-register\">\r\n                        <p className=\"register-text\">{this.props.loginMessage}</p>\r\n                        <button type=\"button\" className=\"register-button\" onClick={this.handleOkClick}>OK</button>\r\n                    </div>\r\n                </div>\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground login-popup-foreground\">\r\n                    <h2 className=\"login-title\">Crypto Portfolio Manager<br/><br/>Login</h2>\r\n                    {loginContainer}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './AddPopups.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class AddWatchlist extends Component {\r\n\r\n    state = {\r\n        watchlistName: \"\",\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            watchlistName: value,\r\n        });\r\n    }\r\n\r\n    handleClickAddButton = () => {\r\n        this.props.handleCreateNewWatchlist(this.state.watchlistName);\r\n    }\r\n\r\n    handleClickCancelButton = () => {\r\n        this.props.clearErrorMessage();\r\n        this.props.makePopupVisible(\"AddWatchlist\", false);\r\n    }\r\n\r\n    render() {\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\"\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Add Watchlist</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>Enter a name for your new watchlist, then click Add. Click Cancel to close the dialogue without adding a new watchlist.</p>\r\n                    </div>\r\n                    <div className=\"add-popup-input-container\">\r\n                        <div className=\"add-popup-input\">\r\n                            <label htmlFor=\"watchlist-name\" className=\"add-popup-name-label\">Watchlist name</label>\r\n                            <input type=\"text\" className=\"add-popup-name-input\" name=\"watchlist-name\" onChange={this.handleInputChange}></input>\r\n                        </div>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                    <div className=\"popup-button-container\">\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickAddButton}>Add</button>\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickCancelButton}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ManageCoins extends Component {\r\n\r\n    state = {\r\n        symbol: \"\",\r\n        symbolInput: \"\",\r\n    }\r\n\r\n    handleSymbolInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: value.toUpperCase()\r\n        });\r\n    };\r\n\r\n    handleClickOnListItem = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: \"\",\r\n        });\r\n    }\r\n\r\n    handleClickAddButton = () => {\r\n        const id = this.props.coins.filter(x => x.symbol === this.state.symbol).length === 1\r\n            ? this.props.coins.filter(x => x.symbol === this.state.symbol)[0].coinId\r\n            : -1\r\n        if (id === -1) {\r\n            alert(\"This portfolio manager does not recognise the coin you entered. Select one from the list.\");\r\n        } else {\r\n            this.props.addWatchlistItem(id);\r\n        }\r\n        this.setState({\r\n            symbol: \"\",\r\n            symbolInput: \"\",\r\n        });\r\n    }\r\n\r\n    handleClickCloseButton = () => {\r\n        this.props.clearErrorMessage();\r\n        this.props.makePopupVisible(\"EditWatchlist\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\"\r\n\r\n        const symbolList = [...this.props.coins]\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(coin => <option className=\"ticker-item\" key={coin.coinId} value={coin.symbol} onClick={this.handleClickOnListItem}>{coin.coinName}</option>);\r\n\r\n        const watchlistItems = this.props.coinListCreator()\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(coin => <div key={coin.coinId} className=\"edit-watchlist-coin-item\">\r\n                <div className=\"edit-watchlist-coin-text-container\">\r\n                    <div className=\"edit-watchlist-coin-image\"><img src={coin.logo} alt={`${coin.symbol} icon`} /></div>\r\n                    <p className=\"edit-watchlist-coin-text\">{`${coin.symbol}  -  ${coin.coinName}`}</p>\r\n                </div>\r\n                <div className=\"edit-watchlist-delete-icon\"><i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={() => this.props.deleteWatchlistItem(coin.coinId)}></i></div>\r\n            </div>)\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Add/remove coin</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To add a new coin to your watchlist, select one from the dropdown, then click Add.\r\n                            To delete a coin from your watchlist, click on the trashcan icon next to the coin you want to delete.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"ticker-input\">Add coin</label>\r\n                            <input type=\"text\" name=\"ticker-input\" className=\"edit-popup-input-field\" list=\"ticker-list\"\r\n                                autoComplete=\"off\" value={this.state.symbol}\r\n                                onChange={this.handleSymbolInputChange}>\r\n                            </input>\r\n                            <datalist className=\"ticker-list\" id=\"ticker-list\">{symbolList}</datalist>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"edit-watchlist-coin-container\">{watchlistItems}</div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickAddButton}>Add</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickCloseButton}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class RenameWatchlist extends Component {\r\n\r\n    state = {\r\n        watchlistName: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            watchlistName: this.props.loggedInUser.watchlists[this.props.currentWatchlist].name\r\n        });\r\n    }\r\n\r\n    handleNameInputChange = (e) => {\r\n        const value = e.target.value.length <= 20 ? e.target.value : e.target.value.slice(0, 20);\r\n        this.setState({\r\n            watchlistName: value\r\n        });\r\n    }\r\n\r\n    handleClickRenameButton = () => {\r\n        if (this.state.watchlistName) {\r\n            this.props.renameWatchlist(this.state.watchlistName);\r\n        } else {\r\n            alert(\"You need to add a name in the Name field first.\");\r\n        }\r\n    }\r\n\r\n    handleClickCloseButton = () => {\r\n        this.props.clearErrorMessage();\r\n        this.props.makePopupVisible(\"EditWatchlist\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Rename watchlist</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To rename the watchlist, edit the name in the Name field, then click Rename.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"name-input\">Name</label>\r\n                            <input type=\"text\" name=\"name-input\" className=\"edit-popup-input-field\"\r\n                                value={this.state.watchlistName}\r\n                                onChange={this.handleNameInputChange} >\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickRenameButton}>Rename</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickCloseButton}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class DeleteWatchlist extends Component {\r\n\r\n    handleClickDeleteButton = () => {\r\n        this.props.deleteWatchlist();\r\n        this.props.makePopupVisible(\"EditWatchlist\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Delete watchlist</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To delete the watchlist, click Delete.\r\n                        </p>\r\n                        <p className=\"edit-popup-input-description-text warning-text\">\r\n                            <span className=\"warning-text-highlight\">Warning:</span><br/>\r\n                            You are about to delete the watchlist <span className=\"warning-text-highlight\">{this.props.loggedInUser.watchlists[this.props.currentWatchlist].name}</span>.<br/><br/>\r\n                            The deletion of the watchlist is permanent, you will not be able to recover\r\n                            it after clicking Delete.\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickDeleteButton}>Delete</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditWatchlist\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './EditPopups.css';\r\nimport './EditWatchlist.css';\r\nimport React, { Component } from 'react';\r\nimport ManageCoins from './ManageCoins';\r\nimport RenameWatchlist from './RenameWatchlist';\r\nimport DeleteWatchlist from './DeleteWatchlist';\r\n\r\nexport default class EditWatchlist extends Component {\r\n\r\n    state = {\r\n        page: \"Manage\",\r\n    }\r\n\r\n    handleTabChange = (newpage) => {\r\n        this.props.clearErrorMessage();\r\n        this.setState({\r\n            page: newpage\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let Page = \"\";\r\n        let manageClass = \"popup-menu-item popup-menu-item-active\";\r\n        let renameClass = \"popup-menu-item\";\r\n        let deleteClass = \"popup-menu-item\";\r\n\r\n        if (this.state.page === \"Manage\") {\r\n            Page = <ManageCoins errorMessage={this.props.errorMessage}\r\n                clearErrorMessage={this.props.clearErrorMessage}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                coins={this.props.coins}\r\n                coinListCreator={this.props.coinListCreator}\r\n                deleteWatchlistItem={this.props.deleteWatchlistItem}\r\n                addWatchlistItem={this.props.addWatchlistItem}\r\n                compareFunction={this.props.compareFunction}\r\n            />\r\n        }\r\n\r\n        if (this.state.page === \"Rename\") {\r\n            Page = <RenameWatchlist errorMessage={this.props.errorMessage}\r\n                clearErrorMessage={this.props.clearErrorMessage}\r\n                renameWatchlist={this.props.renameWatchlist}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentWatchlist={this.props.currentWatchlist}\r\n            />\r\n            manageClass = \"popup-menu-item\";\r\n            renameClass = \"popup-menu-item popup-menu-item-active\";\r\n            deleteClass = \"popup-menu-item\";\r\n        }\r\n\r\n        if (this.state.page === \"Delete\") {\r\n            Page = <DeleteWatchlist errorMessage={this.props.errorMessage}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentWatchlist={this.props.currentWatchlist}\r\n                deleteWatchlist={this.props.deleteWatchlist}\r\n            />\r\n            manageClass = \"popup-menu-item\";\r\n            renameClass = \"popup-menu-item\";\r\n            deleteClass = \"popup-menu-item popup-menu-item-active\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Edit Watchlist - {this.props.loggedInUser.watchlists[this.props.currentWatchlist].name}</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>On the Manage Coins tab, you can add new coins to your watchlist or remove coins.\r\n                            You can rename or delete the current watchlist on the Rename or Delete tab.\r\n                        </p>\r\n                    </div>\r\n                    <nav>\r\n                        <ul className=\"popup-menu-container\">\r\n                            <li className={manageClass} onClick={() => this.handleTabChange(\"Manage\")}>Manage Coins</li>\r\n                            <li className={renameClass} onClick={() => this.handleTabChange(\"Rename\")}>Rename</li>\r\n                            <li className={deleteClass} onClick={() => this.handleTabChange(\"Delete\")}>Delete</li>\r\n                        </ul>\r\n                    </nav>\r\n                    {Page}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './AddPopups.css';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class AddPortfolio extends Component {\r\n\r\n    state = {\r\n        portfolioName: \"\",\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            portfolioName: value,\r\n        });\r\n    }\r\n\r\n    handleClickAddButton = () => {\r\n        this.props.handleCreateNewPortfolio(this.state.portfolioName);\r\n    }\r\n\r\n    handleClickCancelButton = () => {\r\n        this.props.clearErrorMessage();\r\n        this.props.makePopupVisible(\"AddPortfolio\", false);\r\n    }\r\n\r\n    render() {\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\"\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Add Portfolio</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>Enter a name for your new portfolio, then click Add. Click Cancel to close the dialogue without adding a new portfolio.</p>\r\n                    </div>\r\n                    <div className=\"add-popup-input-container\">\r\n                        <div className=\"add-popup-input\">\r\n                            <label htmlFor=\"portfolio-name\" className=\"add-popup-name-label\">Portfolio name</label>\r\n                            <input type=\"text\" className=\"add-popup-name-input\" name=\"portfolio-name\" onChange={this.handleInputChange}></input>\r\n                        </div>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                    <div className=\"popup-button-container\">\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickAddButton}>Add</button>\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickCancelButton}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class RenamePortfolio extends Component {\r\n\r\n    state = {\r\n        portfolioName: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            portfolioName: this.props.loggedInUser.portfolios[this.props.currentPortfolio].name\r\n        });\r\n    }\r\n\r\n    handleNameInputChange = (e) => {\r\n        const value = e.target.value.length <= 20 ? e.target.value : e.target.value.slice(0, 20);\r\n        this.setState({\r\n            portfolioName: value\r\n        });\r\n    }\r\n\r\n    handleClickRenameButton = () => {\r\n        if (this.state.portfolioName) {\r\n            this.props.renamePortfolio(this.state.portfolioName);\r\n        } else {\r\n            alert(\"You need to add a name in the Name field first.\");\r\n        }\r\n    }\r\n\r\n    handleClickCloseButton = () => {\r\n        this.props.clearErrorMessage();\r\n        this.props.makePopupVisible(\"EditPortfolio\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Rename portfolio</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To rename the portfolio, edit the name in the Name field, then click Rename.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"name-input\">Name</label>\r\n                            <input type=\"text\" name=\"name-input\" className=\"edit-popup-input-field\"\r\n                                value={this.state.portfolioName}\r\n                                onChange={this.handleNameInputChange} >\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickRenameButton}>Rename</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickCloseButton}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class DeletePortfolio extends Component {\r\n\r\n    handleClickDeleteButton = () => {\r\n        this.props.deletePortfolio();\r\n        this.props.makePopupVisible(\"EditPortfolio\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Delete portfolio</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To delete the portfolio, click Delete.\r\n                        </p>\r\n                        <p className=\"edit-popup-input-description-text warning-text\">\r\n                            <span className=\"warning-text-highlight\">Warning:</span><br/>\r\n                            You are about to delete the portfolio <span className=\"warning-text-highlight\">{this.props.loggedInUser.portfolios[this.props.currentPortfolio].name}</span>.<br/><br/>\r\n                            The deletion of the portfolio and all its assets is permanent, you will not be able to recover\r\n                            them after clicking Delete.\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickDeleteButton}>Delete</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditPortfolio\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './EditPopups.css';\r\nimport React, { Component } from 'react';\r\nimport RenamePortfolio from './RenamePortfolio';\r\nimport DeletePortfolio from './DeletePortfolio';\r\n\r\nexport default class EditPortfolio extends Component {\r\n\r\n    state = {\r\n        page: \"Rename\",\r\n    }\r\n\r\n    handleTabChange = (newpage) => {\r\n        this.props.clearErrorMessage();\r\n        this.setState({\r\n            page: newpage\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let Page = \"\";\r\n        let renameClass = \"popup-menu-item\";\r\n        let deleteClass = \"popup-menu-item\";\r\n\r\n        if (this.state.page === \"Rename\") {\r\n            Page = <RenamePortfolio errorMessage={this.props.errorMessage}\r\n                clearErrorMessage={this.props.clearErrorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                renamePortfolio={this.props.renamePortfolio}\r\n            />\r\n            renameClass = \"popup-menu-item popup-menu-item-active\";\r\n            deleteClass = \"popup-menu-item\";\r\n        }\r\n\r\n        if (this.state.page === \"Delete\") {\r\n            Page = <DeletePortfolio errorMessage={this.props.errorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                deletePortfolio={this.props.deletePortfolio}\r\n            />\r\n            renameClass = \"popup-menu-item\";\r\n            deleteClass = \"popup-menu-item popup-menu-item-active\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Edit Portfolio - {this.props.loggedInUser.portfolios[this.props.currentPortfolio].name}</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>You can rename or delete the current portfolio.</p>\r\n                    </div>\r\n                    <nav>\r\n                        <ul className=\"popup-menu-container\">\r\n                            \r\n                            <li className={renameClass} onClick={() => this.handleTabChange(\"Rename\")}>Rename</li>\r\n                            <li className={deleteClass} onClick={() => this.handleTabChange(\"Delete\")}>Delete</li>\r\n                        </ul>\r\n                    </nav>\r\n                    {Page}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class BuyAsset extends Component {\r\n\r\n    state = {\r\n        symbol: \"\",\r\n        symbolInput: \"\",\r\n        quantity: 0,\r\n        quantity_scale: 8,\r\n        price: 0,\r\n        price_scale: 8,\r\n        date: \"\",\r\n        disabledInput: \"disabled\",\r\n    }\r\n\r\n    handleSymbolInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: value.toUpperCase(),\r\n            disabledInput: \"disabled\",\r\n            quantity: 0,\r\n            quantity_scale: 8,\r\n            price: 0,\r\n            price_scale: 8,\r\n            date: \"\",\r\n        });\r\n        if (this.props.coins.filter(x => x.symbol === value.toUpperCase()).length > 0) {\r\n            const coin = this.props.coins.filter(x => x.symbol === value.toUpperCase())[0];\r\n            const price = coin.price_eur;\r\n            const date = new Date().toISOString().substring(0, 10);\r\n            this.setState({\r\n                quantity_scale: coin.quantity_scale,\r\n                price: price,\r\n                price_scale: coin.price_scale,\r\n                date: date,\r\n                disabledInput: \"\",\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClickOnListItem = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: \"\",\r\n        });\r\n    }\r\n\r\n    handleQuantityInputChange = (e) => {\r\n        let value = this.props.inputDecimalSetter(e.target.value, 8);\r\n        if (this.props.coins.filter(coin => coin.symbol === this.state.symbol).length > 0 ) {\r\n            const scale = this.props.coins.filter(coin => coin.symbol === this.state.symbol)[0].quantity_scale;\r\n            value = this.props.inputDecimalSetter(e.target.value, scale);\r\n        }\r\n        this.setState({\r\n            quantity: value\r\n        });\r\n    };\r\n\r\n    handlePriceInputChange = (e) => {\r\n        let value = this.props.inputDecimalSetter(e.target.value, 8);\r\n        if (this.props.coins.filter(coin => coin.symbol === this.state.symbol).length > 0 ) {\r\n            const scale = this.props.coins.filter(coin => coin.symbol === this.state.symbol)[0].price_scale;\r\n            value = this.props.inputDecimalSetter(e.target.value, scale);\r\n        }\r\n        this.setState({\r\n            price: value\r\n        });\r\n    };\r\n\r\n    handleDateInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            date: value\r\n        });\r\n    };\r\n\r\n    handleClickBuyButton = () => {\r\n        const id = this.props.coins.filter(x => x.symbol === this.state.symbol).length === 1\r\n            ? this.props.coins.filter(x => x.symbol === this.state.symbol)[0].coinId\r\n            : -1\r\n        const currentDate = new Date();\r\n        const purchaseDate = new Date(this.state.date);\r\n        if (id === -1 || this.state.quantity <= 0 || this.state.price <= 0 || purchaseDate > currentDate) {\r\n            alert(\"Some of the data are invalid, check and correct any invalid data:\\n- symbol should exist (select one from the list),\\n- quantity and purchase price should be > 0,\\n- purchase date cannot be in the future.\");\r\n        } else {\r\n            this.props.addTransactionToPortfolio(id, 0, this.state.quantity, this.state.price, this.state.date);\r\n            this.setState({\r\n                symbol: \"\",\r\n                symbolInput: \"\",\r\n                quantity: 0,\r\n                quantity_scale: 8,\r\n                price: 0,\r\n                price_scale: 8,\r\n                date: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        const symbolList = [...this.props.coins]\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(coin => <option className=\"ticker-item\" key={coin.coinId} value={coin.symbol} onClick={this.handleClickOnListItem}>{coin.coinName}</option>);\r\n\r\n        const portfolioItems = [...this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets]\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(asset => <div key={asset.coin_id} className=\"buy-sell-asset-item\">\r\n                <div className=\"buy-sell-asset-coin-text-container\">\r\n                    <div className=\"buy-sell-asset-coin-image\"><img src={this.props.coinFinder(asset.coin_id).logo} alt={`${this.props.coinFinder(asset.coin_id).symbol} icon`} /></div>\r\n                    <p>{`${this.props.coinFinder(asset.coin_id).symbol}  -  ${asset.current_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(asset.coin_id).quantity_scale })}`}</p>\r\n                </div>\r\n            </div>);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Buy asset</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To buy an asset, select the purchased coin and enter the purchased quantity, the purchase price and the purchase date, then click Buy.\r\n                            </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"ticker-list\">Coin</label>\r\n                            <input type=\"text\" name=\"ticker-input\" className=\"edit-popup-input-field\" list=\"ticker-list\"\r\n                                autoComplete=\"off\" value={this.state.symbol}\r\n                                onChange={this.handleSymbolInputChange}>\r\n                            </input>\r\n                            <datalist className=\"ticker-list\" id=\"ticker-list\">{symbolList}</datalist>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"quantity-input\">Quantity</label>\r\n                            <input type=\"number\" name=\"quantity-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.state.quantity_scale}`}\r\n                                value={this.state.quantity}\r\n                                onChange={this.handleQuantityInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buyprice-input\">Price (€)</label>\r\n                            <input type=\"number\" name=\"buyprice-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.state.price_scale}`}\r\n                                value={this.state.price}\r\n                                onChange={this.handlePriceInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buydate-input\">Date</label>\r\n                            <input type=\"date\" name=\"buydate-input\" className=\"edit-popup-input-field\" min=\"2010-01-01\"\r\n                                value={this.state.date}\r\n                                onChange={this.handleDateInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buy-sell-asset-container\">{portfolioItems}</div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickBuyButton}>Buy</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"BuySellAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class SellAsset extends Component {\r\n\r\n    state = {\r\n        symbol: \"\",\r\n        symbolInput: \"\",\r\n        quantity: 0,\r\n        quantity_scale: 8,\r\n        price: 0,\r\n        price_scale: 8,\r\n        date: \"\",\r\n        disabledInput: \"disabled\",\r\n    }\r\n\r\n    handleSymbolInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: value.toUpperCase(),\r\n            disabledInput: \"disabled\",\r\n            quantity: 0,\r\n            quantity_scale: 8,\r\n            price: 0,\r\n            price_scale: 8,\r\n            date: \"\",\r\n        });\r\n        if (this.props.coins.filter(x => x.symbol === value.toUpperCase()).length > 0) {\r\n            const coin = this.props.coins.filter(x => x.symbol === value.toUpperCase())[0]\r\n            const id = coin.coinId;\r\n            const quantity = this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets.filter(asset => asset.coin_id === id)[0].current_quantity;\r\n            const price = coin.price_eur;\r\n            const date = new Date().toISOString().substring(0, 10);\r\n            this.setState({\r\n                quantity: quantity,\r\n                quantity_scale: coin.quantity_scale,\r\n                price: price,\r\n                price_scale: coin.price_scale,\r\n                date: date,\r\n                disabledInput: \"\",\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClickOnListItem = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            symbol: value.toUpperCase(),\r\n            symbolInput: \"\",\r\n        });\r\n    }\r\n\r\n    handleQuantityInputChange = (e) => {\r\n        let value = this.props.inputDecimalSetter(e.target.value, 8);\r\n        if (this.props.coins.filter(coin => coin.symbol === this.state.symbol).length > 0 ) {\r\n            const scale = this.props.coins.filter(coin => coin.symbol === this.state.symbol)[0].quantity_scale;\r\n            value = this.props.inputDecimalSetter(e.target.value, scale);\r\n        }\r\n        this.setState({\r\n            quantity: value\r\n        });\r\n    };\r\n\r\n    handlePriceInputChange = (e) => {\r\n        let value = this.props.inputDecimalSetter(e.target.value, 8);\r\n        if (this.props.coins.filter(coin => coin.symbol === this.state.symbol).length > 0 ) {\r\n            const scale = this.props.coins.filter(coin => coin.symbol === this.state.symbol)[0].price_scale;\r\n            value = this.props.inputDecimalSetter(e.target.value, scale);\r\n        }\r\n        this.setState({\r\n            price: value\r\n        });\r\n    };\r\n\r\n    handleDateInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            date: value\r\n        });\r\n    };\r\n\r\n    handleClickSellButton = () => {\r\n        const id = this.props.coins.filter(coin => coin.symbol === this.state.symbol).length === 1\r\n            ? this.props.coins.filter(coin => coin.symbol === this.state.symbol)[0].coinId\r\n            : -1;\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const selectedAsset = currentPortfolio.assets.filter(asset => asset.coin_id === id)[0];\r\n        const selectedAssetTransactions = currentPortfolio.transactions.filter(transaction => transaction.coin_id === selectedAsset.coin_id);\r\n        selectedAssetTransactions.push(\r\n            {\r\n                \"buy_sell\": 1,\r\n                \"quantity\": this.state.quantity,\r\n                \"price\": this.state.price,\r\n                \"date\": this.state.date\r\n            }\r\n        )\r\n        if (this.props.transactionQuantityChecker(selectedAssetTransactions)) {\r\n            alert(`Sell unsuccessful. The total quantity of the asset would be less than zero at some date.`);\r\n        } else {\r\n            const quantity = id === -1 ? 0 : selectedAsset.current_quantity;\r\n            const currentDate = new Date();\r\n            const purchaseDate = new Date(this.state.date);\r\n            if (id === -1 || this.state.quantity <= 0 || this.state.quantity > quantity || this.state.price <= 0 || purchaseDate > currentDate) {\r\n                alert(\"Some of the data are invalid, check and correct any invalid data:\\n- symbol should exist (select one from the list),\\n- quantity and price should be > 0,\\n- quantity cannot be more than available quantity,\\n- date cannot be in the future.\");\r\n            } else {\r\n                this.props.addTransactionToPortfolio(id, 1, this.state.quantity, this.state.price, this.state.date);\r\n                this.setState({\r\n                    symbol: \"\",\r\n                    symbolInput: \"\",\r\n                    quantity: 0,\r\n                    quantity_scale: 8,\r\n                    price: 0,\r\n                    price_scale: 8,\r\n                    date: \"\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        const symbolList = [...this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets]\r\n            .map(asset => this.props.coinFinder(asset.coin_id))\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(coin => <option className=\"ticker-item\" key={coin.coinId} value={coin.symbol} onClick={this.handleClickOnListItem}>{coin.coinName}</option>);\r\n\r\n        const portfolioItems = [...this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets]\r\n            .sort(this.props.compareFunction(\"symbol\", true))\r\n            .map(asset => <div key={asset.coin_id} className=\"buy-sell-asset-item\">\r\n                <div className=\"buy-sell-asset-coin-text-container\">\r\n                    <div className=\"buy-sell-asset-coin-image\"><img src={this.props.coinFinder(asset.coin_id).logo} alt={`${this.props.coinFinder(asset.coin_id).symbol} icon`} /></div>\r\n                    <p>{`${this.props.coinFinder(asset.coin_id).symbol}  -  ${asset.current_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(asset.coin_id).quantity_scale })}`}</p>\r\n                </div>\r\n            </div>);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Sell asset</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To sell an asset, select the coin to sell (if it is not already selected), change the quantity,\r\n                            price and date as necessary, then click Sell.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"ticker-list\">Coin</label>\r\n                            <input type=\"text\" name=\"ticker-input\" className=\"edit-popup-input-field\" list=\"ticker-list\"\r\n                                autoComplete=\"off\" value={this.state.symbol}\r\n                                onChange={this.handleSymbolInputChange}>\r\n                            </input>\r\n                            <datalist className=\"ticker-list\" id=\"ticker-list\">{symbolList}</datalist>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"quantity-input\">Quantity</label>\r\n                            <input type=\"number\" name=\"quantity-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.state.quantity_scale}`}\r\n                                value={this.state.quantity}\r\n                                onChange={this.handleQuantityInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buyprice-input\">Price (€)</label>\r\n                            <input type=\"number\" name=\"buyprice-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.state.price_scale}`}\r\n                                value={this.state.price}\r\n                                onChange={this.handlePriceInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buydate-input\">Date</label>\r\n                            <input type=\"date\" name=\"buydate-input\" className=\"edit-popup-input-field\" min=\"2010-01-01\"\r\n                                value={this.state.date}\r\n                                onChange={this.handleDateInputChange}\r\n                                disabled={this.state.disabledInput}>\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buy-sell-asset-container\">{portfolioItems}</div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickSellButton}>Sell</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"BuySellAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './EditPopups.css';\r\nimport './BuySellAsset.css';\r\nimport React, { Component } from 'react';\r\nimport BuyAsset from './BuyAsset';\r\nimport SellAsset from './SellAsset';\r\n\r\nexport default class BuySellAsset extends Component {\r\n\r\n    state = {\r\n        page: \"Buy\",\r\n    }\r\n\r\n    handleTabChange = (newpage) => {\r\n        this.setState({\r\n            page: newpage\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let Page = \"\";\r\n        let buyClass = \"popup-menu-item popup-menu-item-active\";\r\n        let sellClass = \"popup-menu-item\";\r\n\r\n        if (this.state.page === \"Buy\") {\r\n            Page = <BuyAsset errorMessage={this.props.errorMessage}\r\n                coins={this.props.coins}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                coinFinder={this.props.coinFinder}\r\n                addTransactionToPortfolio={this.props.addTransactionToPortfolio}\r\n                compareFunction={this.props.compareFunction}\r\n                inputDecimalSetter={this.props.inputDecimalSetter}\r\n            />\r\n        }\r\n\r\n        if (this.state.page === \"Sell\") {\r\n            Page = <SellAsset errorMessage={this.props.errorMessage} \r\n                coins={this.props.coins}\r\n                makePopupVisible={this.props.makePopupVisible}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                coinFinder={this.props.coinFinder}\r\n                addTransactionToPortfolio={this.props.addTransactionToPortfolio}\r\n                compareFunction={this.props.compareFunction}\r\n                transactionQuantityChecker={this.props.transactionQuantityChecker}\r\n                inputDecimalSetter={this.props.inputDecimalSetter}\r\n            />\r\n            buyClass = \"popup-menu-item\";\r\n            sellClass = \"popup-menu-item popup-menu-item-active\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Buy/Sell Asset - {this.props.loggedInUser.portfolios[this.props.currentPortfolio].name}</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>You can buy and sell assets in the current portfolio.</p>\r\n                    </div>\r\n                    <nav>\r\n                        <ul className=\"popup-menu-container\">\r\n                            <li className={buyClass} onClick={() => this.handleTabChange(\"Buy\")}>Buy Asset</li>\r\n                            <li className={sellClass} onClick={() => this.handleTabChange(\"Sell\")}>Sell Asset</li>\r\n                        </ul>\r\n                    </nav>\r\n                    {Page}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class AssetDetails extends Component {\r\n\r\n    render() {\r\n\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const currentValue = currentAsset.current_quantity * this.props.coinFinder(currentAsset.coin_id).price_eur;\r\n        const absoluteYield = Number.parseFloat((currentValue + currentAsset.sold_value - currentAsset.bought_value).toFixed(2));\r\n        const percentageYield = Number.parseFloat(((absoluteYield / currentAsset.bought_value) * 100).toFixed(2));\r\n        const portfolioCurrentValue = Number.parseFloat((currentPortfolio.assets.map(asset => asset.current_quantity * this.props.coinFinder(asset.coin_id).price_eur).reduce((acc, value) => acc + value, 0)).toFixed(2));\r\n        const assetShare = (currentValue / portfolioCurrentValue * 100).toFixed(2);\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Asset details</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            This page shows you all the details of this asset, its transactions and profit/loss.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-asset-details-container\">\r\n                        <div className=\"edit-asset-details-name-container\">\r\n                            <p className=\"edit-asset-details-icon\"><img src={this.props.coinFinder(currentAsset.coin_id).logo} alt={`${this.props.coinFinder(currentAsset.coin_id).symbol} icon`} /></p>\r\n                            <p className=\"edit-asset-details-name\">{this.props.coinFinder(currentAsset.coin_id).symbol} - {this.props.coinFinder(currentAsset.coin_id).coinName}</p>\r\n                        </div>\r\n                        <h3 className=\"edit-asset-details-group-name\">Currently in Portfolio</h3>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Current Quantity</p>\r\n                            <p className=\"edit-asset-details-data\">{currentAsset.current_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(currentAsset.coin_id).quantity_scale })}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Current Price</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.priceConverter(this.props.coinFinder(currentAsset.coin_id))}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Current Value</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.amountConverter(currentValue)}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Share in Portfolio</p>\r\n                            <p className=\"edit-asset-details-data\">{assetShare} %</p>\r\n                        </div>\r\n                        <h3 className=\"edit-asset-details-group-name\">Buy Transactions</h3>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Buy Qty</p>\r\n                            <p className=\"edit-asset-details-data\">{currentAsset.total_buy_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(currentAsset.coin_id).quantity_scale })}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Buy Value</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.amountConverter(currentAsset.bought_value)}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Buy Avg. Price</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.valueConverter(currentAsset.total_buy_quantity === 0 ? 0 : (currentAsset.bought_value / currentAsset.total_buy_quantity), this.props.coinFinder(currentAsset.coin_id))}</p>\r\n                        </div>\r\n                        <h3 className=\"edit-asset-details-group-name\">Sell Transactions</h3>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Sell Qty</p>\r\n                            <p className=\"edit-asset-details-data\">{currentAsset.total_sell_quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(currentAsset.coin_id).quantity_scale })}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Sell Value</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.amountConverter(currentAsset.sold_value)}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Total Sell Avg. Price</p>\r\n                            <p className=\"edit-asset-details-data\">{this.props.valueConverter(currentAsset.total_sell_quantity === 0 ? 0 : (currentAsset.sold_value / currentAsset.total_sell_quantity), this.props.coinFinder(currentAsset.coin_id))}</p>\r\n                        </div>\r\n                        <h3 className=\"edit-asset-details-group-name\">Profit</h3>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Net Profit/Loss</p>\r\n                            <p className={`edit-asset-details-data ${this.props.priceColorSetter(percentageYield)}`}>{this.props.amountConverter(absoluteYield)}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">Yield</p>\r\n                            <p className={`edit-asset-details-data ${this.props.priceColorSetter(percentageYield)}`}>{percentageYield.toFixed(2)} %</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-item-container\">\r\n                            <p className=\"edit-asset-details-label\">APY</p>\r\n                            <p className={`edit-asset-details-data ${this.props.priceColorSetter(percentageYield)}`}>{currentAsset.apy.toFixed(2)} %</p>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <p></p>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Transactions extends Component {\r\n\r\n    handleClickEditTransactionIcon = (id) => {\r\n        const index = this.props.loggedInUser.portfolios[this.props.currentPortfolio].transactions.findIndex(transaction => transaction.id === id);\r\n        this.props.setCurrentIndex(index, \"transaction\");\r\n        this.props.makePopupVisible(\"EditTransaction\", true);\r\n    }\r\n\r\n    handleClickDeleteTransactionIcon = (transaction) => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        if (transaction.buy_sell === 0) {\r\n            const checkedTransactions = currentPortfolio.transactions\r\n                .filter(trans => trans.coin_id === transaction.coin_id)\r\n                .filter(trans => trans.id !== transaction.id);\r\n            if (this.props.transactionQuantityChecker(checkedTransactions)) {\r\n                alert(`This transaction cannot be deleted, only modified. The total quantity of the asset at the date of the transaction would be less than zero after deleting it.`);\r\n            } else {\r\n                this.props.deleteTransaction(transaction.id);\r\n                if (currentPortfolio.transactions.length === 1) {\r\n                    this.props.makePopupVisible(\"EditAsset\", false);\r\n                }\r\n            }\r\n        } else {\r\n            this.props.deleteTransaction(transaction.id);\r\n            if (currentPortfolio.transactions.length === 1) {\r\n                this.props.makePopupVisible(\"EditAsset\", false);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        const assetTransactions = [...currentPortfolio.transactions]\r\n            .filter(transaction => transaction.coin_id === currentAsset.coin_id)\r\n            .sort(this.props.compareFunction(\"date\", true))\r\n            .map(transaction =>\r\n                <div key={transaction.id} className=\"edit-asset-details-transaction-item-container\">\r\n                    <p className=\"edit-asset-details-transaction-item-date\">{transaction.date}</p>\r\n                    <div className=\"edit-asset-details-transaction-item\">\r\n                        <p className=\"edit-asset-details-transaction-buysell\">{transaction.buy_sell === 0 ? \"Buy\" : \"Sell\"}</p>\r\n                        <p className=\"edit-asset-details-transaction-quantity\">{transaction.quantity.toLocaleString('en-GB', { maximumFractionDigits: this.props.coinFinder(transaction.coin_id).quantity_scale })}</p>\r\n                        <p className=\"edit-asset-details-transaction-price\">{this.props.valueConverter(transaction.price, this.props.coinFinder(transaction.coin_id))}</p>\r\n                        <div className=\"edit-asset-details-transaction-item-icon-container\">\r\n                            <p className=\"edit-asset-details-transaction-item-icon\"><i className=\"fa fa-pencil\" aria-hidden=\"true\" onClick={() => this.handleClickEditTransactionIcon(transaction.id)}></i></p>\r\n                            <p className=\"edit-asset-details-transaction-item-icon\"><i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={() => this.handleClickDeleteTransactionIcon(transaction)}></i></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Transactions</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            This page shows you all the transactions you made in this asset.\r\n                            You can also modify or delete a transaction here.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-asset-details-container\">\r\n                        <div className=\"edit-asset-details-name-container\">\r\n                            <p className=\"edit-asset-details-icon\"><img src={this.props.coinFinder(currentAsset.coin_id).logo} alt={`${this.props.coinFinder(currentAsset.coin_id).symbol} icon`} /></p>\r\n                            <p className=\"edit-asset-details-name\">{this.props.coinFinder(currentAsset.coin_id).symbol} - {this.props.coinFinder(currentAsset.coin_id).coinName}</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-transactions-header\">\r\n                            <p className=\"edit-asset-input-description-text\"></p>\r\n                            <p className=\"edit-asset-input-description-text\">Qty</p>\r\n                            <p className=\"edit-asset-input-description-text\">Price</p>\r\n                        </div>\r\n                        <div className=\"edit-asset-details-transactions-container\">\r\n                            {assetTransactions}\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <p></p>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class SellCurrentAsset extends Component {\r\n\r\n    state = {\r\n        symbol: \"\",\r\n        quantity: 0,\r\n        price: 0,\r\n        date: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const coin = this.props.coinFinder(currentAsset.coin_id);\r\n        const date = new Date().toISOString().substring(0, 10);\r\n        this.setState({\r\n            symbol: coin.symbol,\r\n            quantity: Number.parseFloat(currentAsset.current_quantity.toFixed(coin.quantity_scale)),\r\n            price: Number.parseFloat(coin.price_eur.toFixed(coin.price_scale)),\r\n            date: date,\r\n        });\r\n    }\r\n\r\n    handleQuantityInputChange = (e) => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const coin = this.props.coinFinder(currentAsset.coin_id);\r\n        const value = this.props.inputDecimalSetter(e.target.value, coin.quantity_scale);\r\n        this.setState({\r\n            quantity: value\r\n        });\r\n    };\r\n\r\n    handlePriceInputChange = (e) => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const coin = this.props.coinFinder(currentAsset.coin_id);\r\n        const value = this.props.inputDecimalSetter(e.target.value, coin.price_scale);\r\n        this.setState({\r\n            price: value\r\n        });\r\n    };\r\n\r\n    handleDateInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            date: value\r\n        });\r\n    };\r\n\r\n    handleClickSellButton = () => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const selectedAssetTransactions = currentPortfolio.transactions.filter(transaction => transaction.coin_id === currentAsset.coin_id);\r\n        selectedAssetTransactions.push(\r\n            {\r\n                \"buy_sell\": 1,\r\n                \"quantity\": this.state.quantity,\r\n                \"price\": this.state.price,\r\n                \"date\": this.state.date\r\n            }\r\n        )\r\n        if (this.props.transactionQuantityChecker(selectedAssetTransactions)) {\r\n            alert(`Sell unsuccessful. The total quantity of the asset would be less than zero at some date.`);\r\n        } else {\r\n            const id = currentAsset.coin_id;\r\n            const quantity = currentAsset.current_quantity;\r\n            const currentDate = new Date();\r\n            const purchaseDate = new Date(this.state.date);\r\n            if (this.state.quantity <= 0 || this.state.quantity > quantity || this.state.price <= 0 || purchaseDate > currentDate) {\r\n                alert(\"Some of the data are invalid, check and correct any invalid data:\\n- quantity and purchase price should be > 0,\\n- quantity cannot be more than available quantity,\\n- purchase date cannot be in the future.\");\r\n            } else {\r\n                this.props.addTransactionToPortfolio(id, 1, this.state.quantity, this.state.price, this.state.date);\r\n                const coin = this.props.coinFinder(id);\r\n                this.setState({\r\n                    quantity: (quantity * coin.quantity_scale * 10 - this.state.quantity * coin.quantity_scale * 10) / (coin.quantity_scale * 10),\r\n                    price: coin.price_eur,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Sell asset</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To sell the asset, change the quantity, price and date as necessary, then click Sell.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input\">\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"ticker-list\">Coin</label>\r\n                            <input type=\"text\" name=\"ticker-input\" className=\"edit-popup-input-field\" value={this.state.symbol} readOnly></input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"quantity-input\">Quantity</label>\r\n                            <input type=\"number\" name=\"quantity-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.props.coinFinder(currentAsset.coin_id).quantity_scale}`}\r\n                                value={this.state.quantity}\r\n                                onChange={this.handleQuantityInputChange}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buyprice-input\">Price (€)</label>\r\n                            <input type=\"number\" name=\"buyprice-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                step={`1e-${this.props.coinFinder(currentAsset.coin_id).price_scale}`}\r\n                                value={this.state.price}\r\n                                onChange={this.handlePriceInputChange}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"edit-popup-input-item\">\r\n                            <label className=\"edit-popup-input-label\" htmlFor=\"buydate-input\">Date</label>\r\n                            <input type=\"date\" name=\"buydate-input\" className=\"edit-popup-input-field\" min=\"2010-01-01\"\r\n                                value={this.state.date}\r\n                                onChange={this.handleDateInputChange}>\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickSellButton}>Sell</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class DeleteAsset extends Component {\r\n\r\n    handleClickDeleteButton = () => {\r\n        this.props.deleteAsset(this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets[this.props.currentAsset].coin_id);\r\n        this.props.makePopupVisible(\"EditAsset\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"edit-popup-input-container\">\r\n                    <div className=\"edit-popup-input-description\">\r\n                        <h2 className=\"edit-popup-input-description-title\">Delete asset</h2>\r\n                        <p className=\"edit-popup-input-description-text\">\r\n                            To delete the asset, click Delete.\r\n                        </p>\r\n                        <p className=\"edit-popup-input-description-text warning-text\">\r\n                            <span className=\"warning-text-highlight\">Warning:</span><br/>\r\n                            You are about to delete the asset <span className=\"warning-text-highlight\">{this.props.coinFinder(currentAsset.coin_id).coinName}</span> from the portfolio <span className=\"warning-text-highlight\">{currentPortfolio.name}</span>.<br/><br/>\r\n                            You will delete all transactions in this asset from this portfolio.\r\n                            This operations is permanent and cannot be undone.\r\n                            If this is not what you intended, you can modify or delete each transaction individually on the Transactions tab.\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"error-text\">{errorMessage}</p>\r\n                </div>\r\n                <div className=\"popup-button-container\">\r\n                    <button type=\"button\" className=\"popup-button\" onClick={this.handleClickDeleteButton}>Delete</button>\r\n                    <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditAsset\", false)}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './EditAsset.css';\r\nimport './EditPopups.css';\r\nimport React, { Component } from 'react';\r\nimport AssetDetails from './AssetDetails';\r\nimport Transactions from './Transactions';\r\nimport SellCurrentAsset from './SellCurrentAsset';\r\nimport DeleteAsset from './DeleteAsset';\r\n\r\nexport default class EditAsset extends Component {\r\n\r\n    state = {\r\n        page: \"Details\",\r\n    }\r\n\r\n    handleTabChange = (newpage) => {\r\n        this.setState({\r\n            page: newpage\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let Page = \"\";\r\n        let detailsClass = \"popup-menu-item popup-menu-item-active\";\r\n        let transactionsClass = \"popup-menu-item\";\r\n        let sellClass = \"popup-menu-item\";\r\n        let deleteClass = \"popup-menu-item\";\r\n\r\n        if (this.state.page === \"Details\") {\r\n            Page = <AssetDetails makePopupVisible={this.props.makePopupVisible}\r\n                errorMessage={this.props.errorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                currentAsset={this.props.currentAsset}\r\n                coinFinder={this.props.coinFinder}\r\n                priceConverter={this.props.priceConverter}\r\n                valueConverter={this.props.valueConverter}\r\n                amountConverter={this.props.amountConverter}\r\n                priceColorSetter={this.props.priceColorSetter}\r\n            />\r\n        }\r\n\r\n        if (this.state.page === \"Transactions\") {\r\n            Page = <Transactions makePopupVisible={this.props.makePopupVisible}\r\n                errorMessage={this.props.errorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                currentAsset={this.props.currentAsset}\r\n                coinFinder={this.props.coinFinder}\r\n                deleteTransaction={this.props.deleteTransaction}\r\n                setCurrentIndex={this.props.setCurrentIndex}\r\n                compareFunction={this.props.compareFunction}\r\n                valueConverter={this.props.valueConverter}\r\n                transactionQuantityChecker={this.props.transactionQuantityChecker}\r\n            />\r\n            detailsClass = \"popup-menu-item\";\r\n            transactionsClass = \"popup-menu-item popup-menu-item-active\";\r\n            sellClass = \"popup-menu-item\";\r\n            deleteClass = \"popup-menu-item\";\r\n        }\r\n\r\n        if (this.state.page === \"Sell\") {\r\n            Page = <SellCurrentAsset makePopupVisible={this.props.makePopupVisible}\r\n                errorMessage={this.props.errorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                currentAsset={this.props.currentAsset}\r\n                coinFinder={this.props.coinFinder}\r\n                addTransactionToPortfolio={this.props.addTransactionToPortfolio}\r\n                transactionQuantityChecker={this.props.transactionQuantityChecker}\r\n                inputDecimalSetter={this.props.inputDecimalSetter}\r\n            />\r\n            detailsClass = \"popup-menu-item\";\r\n            transactionsClass = \"popup-menu-item\";\r\n            sellClass = \"popup-menu-item popup-menu-item-active\";\r\n            deleteClass = \"popup-menu-item\";\r\n        }\r\n\r\n        if (this.state.page === \"Delete\") {\r\n            Page = <DeleteAsset makePopupVisible={this.props.makePopupVisible}\r\n                errorMessage={this.props.errorMessage}\r\n                loggedInUser={this.props.loggedInUser}\r\n                currentPortfolio={this.props.currentPortfolio}\r\n                currentAsset={this.props.currentAsset}\r\n                coinFinder={this.props.coinFinder}\r\n                deleteAsset={this.props.deleteAsset}\r\n            />\r\n            detailsClass = \"popup-menu-item\";\r\n            transactionsClass = \"popup-menu-item\";\r\n            sellClass = \"popup-menu-item\";\r\n            deleteClass = \"popup-menu-item popup-menu-item-active\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Edit Asset - {this.props.coinFinder(this.props.loggedInUser.portfolios[this.props.currentPortfolio].assets[this.props.currentAsset].coin_id).coinName}</p>\r\n                    </div>\r\n                    <div className=\"popup-description\">\r\n                        <p>You can see all the details of the current asset and its transactions, or you can sell or delete the asset.</p>\r\n                    </div>\r\n                    <nav>\r\n                        <ul className=\"popup-menu-container\">\r\n                            <li className={detailsClass} onClick={() => this.handleTabChange(\"Details\")}>Details</li>\r\n                            <li className={transactionsClass} onClick={() => this.handleTabChange(\"Transactions\")}>Transactions</li>\r\n                            <li className={sellClass} onClick={() => this.handleTabChange(\"Sell\")}>Sell</li>\r\n                            <li className={deleteClass} onClick={() => this.handleTabChange(\"Delete\")}>Delete</li>\r\n                        </ul>\r\n                    </nav>\r\n                    {Page}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class EditTransaction extends Component {\r\n\r\n    state = {\r\n        symbol: \"\",\r\n        buysell: \"\",\r\n        quantity: 0,\r\n        quantity_scale: 8,\r\n        price: 0,\r\n        price_scale: 8,\r\n        date: \"\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentTransaction = currentPortfolio.transactions[this.props.currentTransaction];\r\n        const coin = this.props.coinFinder(currentTransaction.coin_id);\r\n        this.setState({\r\n            symbol: coin.symbol,\r\n            buysell: currentTransaction.buy_sell === 0 ? \"Buy\" : \"Sell\",\r\n            quantity: currentTransaction.quantity,\r\n            quantity_scale: coin.quantity_scale,\r\n            price: currentTransaction.price,\r\n            price_scale: coin.price_scale,\r\n            date: currentTransaction.date,\r\n        });\r\n    }\r\n\r\n    handleQuantityInputChange = (e) => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentTransaction = currentPortfolio.transactions[this.props.currentTransaction];\r\n        const coin = this.props.coinFinder(currentTransaction.coin_id);\r\n        const value = this.props.inputDecimalSetter(e.target.value, coin.quantity_scale);\r\n        this.setState({\r\n            quantity: Number.parseFloat(value)\r\n        });\r\n    };\r\n\r\n    handlePriceInputChange = (e) => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentTransaction = currentPortfolio.transactions[this.props.currentTransaction];\r\n        const coin = this.props.coinFinder(currentTransaction.coin_id);\r\n        const value = this.props.inputDecimalSetter(e.target.value, coin.price_scale);\r\n        this.setState({\r\n            price: Number.parseFloat(value)\r\n        });\r\n    };\r\n\r\n    handleDateInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            date: value\r\n        });\r\n    };\r\n\r\n    handleClickEditButton = () => {\r\n        const currentPortfolio = this.props.loggedInUser.portfolios[this.props.currentPortfolio];\r\n        const currentAsset = currentPortfolio.assets[this.props.currentAsset];\r\n        const currentTransaction = currentPortfolio.transactions[this.props.currentTransaction];\r\n        const checkedTransactions = currentPortfolio.transactions\r\n            .filter(transaction => transaction.coin_id === currentAsset.coin_id)\r\n            .filter(transaction => transaction.id !== currentTransaction.id);\r\n        checkedTransactions.push(\r\n            {\r\n                \"buy_sell\": currentTransaction.buy_sell,\r\n                \"quantity\": this.state.quantity,\r\n                \"price\": this.state.price,\r\n                \"date\": this.state.date\r\n            }\r\n        )\r\n        \r\n        if (this.props.transactionQuantityChecker(checkedTransactions)) {\r\n            alert(`Modification unsuccessful. The total quantity of the asset would be less than zero at some date after this modification.`);\r\n        } else {\r\n            const currentDate = new Date();\r\n            const transactionDate = new Date(this.state.date);\r\n            if (this.state.quantity <= 0 || this.state.price <= 0 || transactionDate > currentDate) {\r\n                alert(\"Some of the data are invalid, check and correct any invalid data:\\n- quantity and price should be > 0,\\n- quantity after the edit cannot be < 0,\\n- date cannot be in the future.\");\r\n            } else {\r\n                this.props.editTransaction(this.state.quantity, this.state.price, this.state.date);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const errorMessage = (this.props.errorMessage) ? this.props.errorMessage : \"\";\r\n\r\n        return (\r\n            <div className=\"popup-background\">\r\n                <div className=\"popup-foreground\">\r\n                    <div className=\"popup-title\">\r\n                        <p className=\"popup-title-icon\"><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></p>\r\n                        <p>Edit Transaction - {this.state.symbol} / {this.state.buysell}</p>\r\n                    </div>\r\n                    <div className=\"edit-popup-input-container\">\r\n                        <div className=\"edit-popup-input-description\">\r\n                            <h2 className=\"edit-popup-input-description-title\">Edit transaction</h2>\r\n                            <p className=\"edit-popup-input-description-text\">\r\n                                To edit the transaction, change the quantity, price and date as necessary, then click Edit.\r\n                        </p>\r\n                        </div>\r\n                        <div className=\"edit-popup-input\">\r\n                            <div className=\"edit-popup-input-item\">\r\n                                <label className=\"edit-popup-input-label\" htmlFor=\"ticker-input\">Coin</label>\r\n                                <input type=\"text\" name=\"ticker-input\" className=\"edit-popup-input-field\" value={this.state.symbol} readOnly></input>\r\n                            </div>\r\n                            <div className=\"edit-popup-input-item\">\r\n                                <label className=\"edit-popup-input-label\" htmlFor=\"buysell-input\">Buy/Sell</label>\r\n                                <input type=\"text\" name=\"buysell-input\" className=\"edit-popup-input-field\" value={this.state.buysell} readOnly></input>\r\n                            </div>\r\n                            <div className=\"edit-popup-input-item\">\r\n                                <label className=\"edit-popup-input-label\" htmlFor=\"quantity-input\">Quantity</label>\r\n                                <input type=\"number\" name=\"quantity-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                    step={`1e-${this.state.quantity_scale}`}\r\n                                    value={this.state.quantity}\r\n                                    onChange={this.handleQuantityInputChange}>\r\n                                </input>\r\n                            </div>\r\n                            <div className=\"edit-popup-input-item\">\r\n                                <label className=\"edit-popup-input-label\" htmlFor=\"price-input\">Price</label>\r\n                                <input type=\"number\" name=\"price-input\" className=\"edit-popup-input-field\" min=\"0\"\r\n                                    step={`1e-${this.state.price_scale}`}\r\n                                    value={this.state.price}\r\n                                    onChange={this.handlePriceInputChange}>\r\n                                </input>\r\n                            </div>\r\n                            <div className=\"edit-popup-input-item\">\r\n                                <label className=\"edit-popup-input-label\" htmlFor=\"date-input\">Date</label>\r\n                                <input type=\"date\" name=\"date-input\" className=\"edit-popup-input-field\" min=\"2010-01-01\"\r\n                                    value={this.state.date}\r\n                                    onChange={this.handleDateInputChange}>\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                    <div className=\"popup-button-container\">\r\n                        <button type=\"button\" className=\"popup-button\" onClick={this.handleClickEditButton}>Edit</button>\r\n                        <button type=\"button\" className=\"popup-button\" onClick={() => this.props.makePopupVisible(\"EditTransaction\", false)}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Prices from './components/Prices';\nimport Portfolios from './components/Portfolios';\nimport PricesGuide from './components/PricesGuide';\nimport PortfoliosGuide from './components/PortfoliosGuide';\nimport PricesSettings from './components/PricesSettings';\nimport Login from './components/Login';\nimport AddWatchlist from './components/AddWatchlist';\nimport EditWatchlist from './components/EditWatchlist';\nimport AddPortfolio from './components/AddPortfolio';\nimport EditPortfolio from './components/EditPortfolio';\nimport BuySellAsset from './components/BuySellAsset';\nimport EditAsset from './components/EditAsset';\nimport EditTransaction from './components/EditTransaction';\n\nexport default class App extends Component {\n\n  state = {\n    page: \"Login\",\n    loggedInUser: \"\",\n    loginMessage: \"\",\n    errorMessage: \"\",\n    coins: [],\n    currentIndexes: {\n      watchlist: 0,\n      portfolio: 0,\n      asset: 0,\n      transaction: 0\n    },\n    popups: {\n      PricesGuide: false, PortfoliosGuide: false, PricesSettings: false,\n      AddWatchlist: false, EditWatchlist: false, AddPortfolio: false,\n      EditPortfolio: false, EditAsset: false, BuySellAsset: false, EditTransaction: false\n    },\n    dataSort: {\n      prices: { index: 0, isUp: true, arrows: [\"▲\", \"\", \"\"], sortProperty: \"symbol\" },\n      portfolios: { index: 0, isUp: true, arrows: [\"▲\", \"\", \"\", \"\", \"\"], sortProperty: \"symbol\" }\n    }\n  }\n\n  async componentDidMount() {\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/coins\", fetchOptions);\n      const result = await response.json();\n      this.setState({\n        coins: result.coins\n      });\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  /*async componentDidUpdate() {\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/coins\", fetchOptions);\n      const result = await response.json();\n      this.setState({\n        coins: result.coins\n      });\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }*/\n\n  handlePageChange = (newpage) => {\n    this.setState({\n      page: newpage\n    });\n  }\n\n  clearErrorMessage = () => {\n    this.setState({\n      errorMessage: \"\"\n    });\n  }\n\n  makePopupVisible = (popupName, direction) => {\n    const newPopups = JSON.parse(JSON.stringify(this.state.popups));\n    newPopups[`${popupName}`] = direction;\n    this.setState({\n      popups: newPopups,\n    });\n  }\n\n  handleCurrencyChange = (currency) => {\n    let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n    newUserData[\"base_currency\"] = currency;\n    this.setState({\n      loggedInUser: newUserData,\n    });\n  }\n\n  priceConverter = (coin) => {\n    return this.state.loggedInUser.base_currency === \"EUR\"\n      ? `€ ${coin.price_eur.toLocaleString('en-GB', { maximumFractionDigits: coin.price_scale })}`\n      : `$ ${coin.price_usd.toLocaleString('en-GB', { maximumFractionDigits: coin.price_scale })}`\n  }\n\n  valueConverter = (value, coin) => {\n    const usdEurRate = this.state.coins.filter(coin => coin.coinId === 12)[0].price_eur;\n    return this.state.loggedInUser.base_currency === \"EUR\"\n      ? `€ ${value.toLocaleString('en-GB', { maximumFractionDigits: coin.price_scale })}`\n      : `$ ${(value / usdEurRate).toLocaleString('en-GB', { maximumFractionDigits: coin.price_scale })}`\n  }\n\n  amountConverter = (amount) => {\n    const usdEurRate = this.state.coins.filter(coin => coin.coinId === 12)[0].price_eur;\n    return this.state.loggedInUser.base_currency === \"EUR\"\n      ? `€ ${amount.toLocaleString('en-GB', { maximumFractionDigits: 2 })}`\n      : `$ ${(amount / usdEurRate).toLocaleString('en-GB', { maximumFractionDigits: 2 })}`\n  }\n\n  priceColorSetter = (priceChange) => {\n    return priceChange >= 0 ? \"green\" : \"red\";\n  }\n\n  coinFinder = (coinId) => {\n    return this.state.coins.filter(coin => coin.coinId === coinId)[0]\n  }\n\n  coinListCreator = () => {\n    return [...this.state.loggedInUser.watchlists[this.state.currentIndexes.watchlist].coins]\n      .map(coin => {\n        return {\n          coinId: this.coinFinder(coin.coin_id).coinId,\n          symbol: this.coinFinder(coin.coin_id).symbol,\n          coinName: this.coinFinder(coin.coin_id).coinName,\n          logo: this.coinFinder(coin.coin_id).logo,\n          price_eur: this.coinFinder(coin.coin_id).price_eur,\n          price_usd: this.coinFinder(coin.coin_id).price_usd,\n          price_change: this.coinFinder(coin.coin_id).price_change,\n          price_scale: this.coinFinder(coin.coin_id).price_scale,\n          quantity_scale: this.coinFinder(coin.coin_id).quantity_scale,\n        }\n      })\n  }\n\n  handleUserLogin = async (username) => {\n    const data = { name: username };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/login\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        this.setState({\n          loginMessage: `Welcome, ${result.users[0].name}`,\n          errorMessage: \"\",\n          loggedInUser: result.users[0],\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  handleUserRegister = async (username) => {\n    const data = { name: username }; \n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/register\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        this.setState({\n          loginMessage: `Sucessfully registered, ${username}`,\n          loggedInUser: result.users[0],\n          errorMessage: \"\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  handleUserLogout = async () => {\n    this.setState({\n      loginMessage: \"\"\n    });\n    const data = { id: this.state.loggedInUser.id, currency: this.state.loggedInUser.base_currency };\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/logout\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          page: \"Login\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  apyCalculator = (transactions, absoluteYield) => {\n    if (transactions.length === 0) {\n      return 0;\n    }\n\n    const sortedBuyTransactions = [...transactions]\n      .filter(transaction => transaction.buy_sell === 0)\n      .sort(this.compareFunction(\"date\", true))\n\n    const currentDate = new Date(new Date().toJSON().slice(0, 10));\n    const firstBuyDate = new Date(sortedBuyTransactions[0].date);\n    let averageYield = 0;\n\n    if (sortedBuyTransactions.length === 1) {\n      averageYield = absoluteYield / (sortedBuyTransactions[0].quantity * sortedBuyTransactions[0].price);\n    } else {\n\n      const daysOfInvestment = [[(new Date(sortedBuyTransactions[1].date) - firstBuyDate) / 86400000, sortedBuyTransactions[0].quantity * sortedBuyTransactions[0].price]];\n      for (let i = 1; i < sortedBuyTransactions.length - 1; i++) {\n        const date1 = new Date(sortedBuyTransactions[i].date);\n        const date2 = new Date(sortedBuyTransactions[i + 1].date);\n        const numOfDays = (date2 - date1) / 86400000;\n        daysOfInvestment.push([numOfDays, daysOfInvestment[i - 1][1] + sortedBuyTransactions[i].quantity * sortedBuyTransactions[i].price]);\n      }\n      daysOfInvestment.push([(currentDate - new Date(sortedBuyTransactions[sortedBuyTransactions.length - 1].date)) / 86400000, daysOfInvestment[sortedBuyTransactions.length - 2][1] + sortedBuyTransactions[sortedBuyTransactions.length - 1].quantity * sortedBuyTransactions[sortedBuyTransactions.length - 1].price]);\n\n      let investmentDays = 0;\n      let days = 0;\n      for (let elem of daysOfInvestment) {\n        days += elem[0];\n        investmentDays += elem[0] * elem[1];\n      }\n      const averageInvestment = investmentDays / days;\n      averageYield = absoluteYield / averageInvestment;\n    }\n\n    const currentYear = currentDate.getFullYear();\n    const numberOfDays = (currentDate - firstBuyDate) / 86400000;\n    const numberOfYears = currentYear - firstBuyDate.getFullYear();\n    const numberOfDaysInLastYear = (currentDate - new Date(firstBuyDate.getFullYear() + numberOfYears, firstBuyDate.getMonth(), firstBuyDate.getDate())) / 86400000;\n    //To see whether it is a leap year or not\n    if ((currentYear % 400 === 0) || ((currentYear % 4 === 0) && (currentYear % 100 !== 0))) {\n      if (numberOfDays <= 366) {\n        return averageYield * 366 / numberOfDays;\n      } else {\n        return 100 * ((1 + averageYield / 100) ** (1 / (numberOfYears + numberOfDaysInLastYear / 366)) - 1)\n      }\n      //If it is a normal year\n    } else {\n      if (numberOfDays <= 365) {\n        return averageYield * 365 / numberOfDays;\n      } else {\n        return 100 * ((1 + averageYield / 100) ** (1 / (numberOfYears + numberOfDaysInLastYear / 365)) - 1)\n      }\n    }\n  }\n\n  //Summarises transactions by coin_id and returns the assets property of the user's portfolio\n  createAssetsFromTransactions = (transactions) => {\n    const assets = []\n    for (let transaction of transactions) {\n      if (assets.filter(asset => asset.coin_id === transaction.coin_id).length === 0) {\n        assets.push({ coin_id: transaction.coin_id });\n      }\n    }\n    for (let i = 0; i < assets.length; i++) {\n      const filteredAssets = transactions.filter(transaction => transaction.coin_id === assets[i].coin_id);\n      const assetTotalBuyQuantity = filteredAssets.filter(transaction => transaction.buy_sell === 0).map(transaction => transaction.quantity).reduce((acc, value) => acc + value * 100000000, 0) / 100000000;\n      const assetTotalSellQuantity = filteredAssets.filter(transaction => transaction.buy_sell === 1).map(transaction => transaction.quantity).reduce((acc, value) => acc + value * 100000000, 0) / 100000000;\n      const assetTotalBuyValue = filteredAssets.filter(transaction => transaction.buy_sell === 0).map(transaction => transaction.quantity * transaction.price).reduce((acc, value) => acc + value, 0);\n      const assetTotalSellValue = filteredAssets.filter(transaction => transaction.buy_sell === 1).map(transaction => transaction.quantity * transaction.price).reduce((acc, value) => acc + value, 0);\n      assets[i].total_buy_quantity = assetTotalBuyQuantity;\n      assets[i].total_sell_quantity = assetTotalSellQuantity;\n      assets[i].current_quantity = (assetTotalBuyQuantity * 100000000 - assetTotalSellQuantity * 100000000) / 100000000;\n      assets[i].average_buy_price = (assetTotalBuyValue / assetTotalBuyQuantity).toPrecision(8);\n      assets[i].bought_value = assetTotalBuyValue;\n      assets[i].sold_value = assetTotalSellValue;\n      assets[i].current_value = assets[i].current_quantity * this.coinFinder(assets[i].coin_id).price_eur;\n      assets[i].absolute_yield = assets[i].current_value + assets[i].sold_value - assets[i].bought_value;\n      assets[i].percentage_yield = (assets[i].absolute_yield / assets[i].bought_value) * 100;\n      assets[i].symbol = this.coinFinder(assets[i].coin_id).symbol;\n      assets[i].apy = assets[i].absolute_yield === 0 ? 0 : this.apyCalculator(filteredAssets, assets[i].absolute_yield) * 100;\n    }\n    return assets;\n  }\n\n  finaliseUserPortfolioData = (portfolios) => {\n    let tempPortfolio = [...portfolios];\n    for (let i = 0; i < tempPortfolio.length; i++) {\n      tempPortfolio[i].assets = this.createAssetsFromTransactions(tempPortfolio[i].transactions);\n    }\n    return tempPortfolio;\n  }\n\n  getUserData = async () => {\n    let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n    const data = { id: this.state.loggedInUser.id };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const watchlistsResponse = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists\", fetchOptions);\n      const watchlistsResult = await watchlistsResponse.json();\n      newUserData[\"watchlists\"] = watchlistsResult.watchlists;\n      const portfoliosResponse = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios\", fetchOptions);\n      const portfoliosResult = await portfoliosResponse.json();\n      const tempPortfolios = portfoliosResult.portfolios;\n      newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n      this.setState({\n        loggedInUser: newUserData,\n        page: \"Prices\",\n      });\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  handleCreateNewWatchlist = async (watchlist) => {\n    const data = { id: this.state.loggedInUser.id, watchlistName: watchlist };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists/add\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        newUserData[\"watchlists\"] = result.watchlists;\n        let newCurrentIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n        newCurrentIndexes[\"watchlist\"] = newUserData[\"watchlists\"].length - 1;\n        this.setState({\n          currentIndexes: newCurrentIndexes,\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n        this.makePopupVisible(\"AddWatchlist\", false);\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  handleCreateNewPortfolio = async (portfolio) => {\n    const data = { id: this.state.loggedInUser.id, portfolioName: portfolio };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/add\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        const tempPortfolios = result.portfolios;\n        newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n        let newCurrentIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n        newCurrentIndexes[\"portfolio\"] = newUserData[\"portfolios\"].length - 1;\n        this.setState({\n          currentIndexes: newCurrentIndexes,\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n        this.makePopupVisible(\"AddPortfolio\", false);\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  setCurrentIndex = (index, property) => {\n    const newIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n    newIndexes[property] = index;\n    this.setState({\n      currentIndexes: newIndexes\n    });\n  }\n\n  deleteWatchlistItem = async (id) => {\n    const currentWatchlist = this.state.loggedInUser.watchlists[this.state.currentIndexes.watchlist];\n    const confirmed = window.confirm(\"Do you really want to delete this item?\")\n    if (confirmed) {\n      const data = { watchlistId: currentWatchlist.id, coinId: id, userId: this.state.loggedInUser.id };\n      const fetchOptions = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      try {\n        const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists/coins/delete\", fetchOptions);\n        const result = await response.json();\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        newUserData[\"watchlists\"] = result.watchlists;\n        this.setState({\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message,\n        });\n      }\n    }\n  }\n\n  addWatchlistItem = async (id) => {\n    const currentWatchlist = this.state.loggedInUser.watchlists[this.state.currentIndexes.watchlist];\n    const data = { watchlistId: currentWatchlist.id, coinId: id, userId: this.state.loggedInUser.id };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists/coins/add\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        newUserData[\"watchlists\"] = result.watchlists;\n        this.setState({\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  addTransactionToPortfolio = async (coinId, buy_sell, quantity, price, date) => {\n    const currentPortfolio = this.state.loggedInUser.portfolios[this.state.currentIndexes.portfolio];\n    const data = { userId: this.state.loggedInUser.id, portfolioId: currentPortfolio.id, coinId: coinId, buy_sell: buy_sell, quantity: quantity, price: price, date: date };\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/transactions/add\", fetchOptions);\n      const result = await response.json();\n      let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n      const tempPortfolios = result.portfolios;\n      newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n      this.setState({\n        loggedInUser: newUserData,\n        errorMessage: \"\",\n      });\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  renamePortfolio = async (name) => {\n    const currentPortfolio = this.state.loggedInUser.portfolios[this.state.currentIndexes.portfolio];\n    const data = { userId: this.state.loggedInUser.id, portfolioId: currentPortfolio.id, portfolioName: name };\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/rename\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        const tempPortfolios = result.portfolios;\n        newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n        this.setState({\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  renameWatchlist = async (name) => {\n    const currentWatchlist = this.state.loggedInUser.watchlists[this.state.currentIndexes.watchlist];\n    const data = { userId: this.state.loggedInUser.id, watchlistId: currentWatchlist.id, watchlistName: name };\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists/rename\", fetchOptions);\n      const result = await response.json();\n      if (result.message) {\n        this.setState({\n          errorMessage: result.message,\n        });\n      } else {\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        newUserData[\"watchlists\"] = result.watchlists;\n        this.setState({\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      }\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  deleteWatchlist = async () => {\n    if (this.state.loggedInUser.watchlists.length > 1) {\n      const currentWatchlist = this.state.loggedInUser.watchlists[this.state.currentIndexes.watchlist];\n      const data = { userId: this.state.loggedInUser.id, watchlistId: currentWatchlist.id };\n      const fetchOptions = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      try {\n        const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/watchlists/delete\", fetchOptions);\n        const result = await response.json();\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        newUserData[\"watchlists\"] = result.watchlists;\n        let newCurrentIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n        newCurrentIndexes[\"watchlist\"] = 0;\n        this.setState({\n          currentIndexes: newCurrentIndexes,\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message,\n        });\n      }\n    } else {\n      alert(\"You cannot delete this watchlist. There must be at least one watchlist.\");\n    }\n  }\n\n  deletePortfolio = async () => {\n    if (this.state.loggedInUser.portfolios.length > 1) {\n      const currentPortfolio = this.state.loggedInUser.portfolios[this.state.currentIndexes.portfolio];\n      const data = { userId: this.state.loggedInUser.id, portfolioId: currentPortfolio.id };\n      const fetchOptions = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      try {\n        const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/delete\", fetchOptions);\n        const result = await response.json();\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        const tempPortfolios = result.portfolios;\n        newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n        let newCurrentIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n        newCurrentIndexes[\"portfolio\"] = 0;\n        this.setState({\n          currentIndexes: newCurrentIndexes,\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message,\n        });\n      }\n    } else {\n      alert(\"You cannot delete this portfolio. There must be at least one portfolio.\");\n    }\n  }\n\n  deleteAsset = async (id) => {\n    const currentPortfolio = this.state.loggedInUser.portfolios[this.state.currentIndexes.portfolio];\n    const confirmed = window.confirm(\"Do you really want to delete this asset and all related transactions from this portfolio?\")\n    if (confirmed) {\n      const data = { userId: this.state.loggedInUser.id, portfolioId: currentPortfolio.id, coinId: id };\n      const fetchOptions = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      try {\n        const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/assets/delete\", fetchOptions);\n        const result = await response.json();\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        const tempPortfolios = result.portfolios;\n        newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n        let newCurrentIndexes = JSON.parse(JSON.stringify(this.state.currentIndexes));\n        newCurrentIndexes[\"asset\"] = 0;\n        this.setState({\n          currentIndexes: newCurrentIndexes,\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message,\n        });\n      }\n    }\n  }\n\n  deleteTransaction = async (id) => {\n    const confirmed = window.confirm(\"Do you really want to delete this transaction?\")\n    if (confirmed) {\n      const data = { userId: this.state.loggedInUser.id, transactionId: id };\n      const fetchOptions = {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      try {\n        const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/transactions/delete\", fetchOptions);\n        const result = await response.json();\n        let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        const tempPortfolios = result.portfolios;\n        newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n        this.setState({\n          loggedInUser: newUserData,\n          errorMessage: \"\",\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message,\n        });\n      }\n    }\n  }\n\n  editTransaction = async (quantity, price, date) => {\n    const currentTransaction = this.state.loggedInUser.portfolios[this.state.currentIndexes.portfolio].transactions[this.state.currentIndexes.transaction];\n    const data = { userId: this.state.loggedInUser.id, transactionId: currentTransaction.id, quantity: quantity, price: price, date: date };\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(\"https://phu7m.sse.codesandbox.io/api/portfolios/transactions/edit\", fetchOptions);\n      const result = await response.json();\n      let newUserData = JSON.parse(JSON.stringify(this.state.loggedInUser));\n      const tempPortfolios = result.portfolios;\n      newUserData[\"portfolios\"] = this.finaliseUserPortfolioData(tempPortfolios);\n      this.setState({\n        loggedInUser: newUserData,\n        errorMessage: \"\",\n      });\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message,\n      });\n    }\n  }\n\n  compareFunction = (sortProperty, order) => {\n    return function innerSort(a, b) {\n      let comparison = 0;\n      if (a[sortProperty] > b[sortProperty]) {\n        comparison = 1;\n      } else if (a[sortProperty] < b[sortProperty]) {\n        comparison = -1;\n      }\n      return (\n        (order) ? (comparison) : (comparison * -1)\n      );\n    };\n  }\n\n  handleDataSort = (index, page, isUp, sortProperty) => {\n    let newDataSort = JSON.parse(JSON.stringify(this.state.dataSort));\n    newDataSort[page].index = index;\n    newDataSort[page].arrows = newDataSort[page].arrows.map(() => \"\");\n    newDataSort[page].arrows[index] = (isUp) ? \"▼\" : \"▲\";\n    newDataSort[page].isUp = !isUp;\n    newDataSort[page].sortProperty = sortProperty;\n    this.setState({\n      dataSort: newDataSort,\n    });\n  }\n\n  transactionQuantityChecker = (transactions) => {\n    const checkedTransactions = [...transactions].sort(this.compareFunction(\"date\", true));\n    let totalQuantityUntilDate = 0;\n    for (let transaction of checkedTransactions) {\n      totalQuantityUntilDate = transaction.buy_sell === 0 ? (totalQuantityUntilDate * 100000000 + transaction.quantity * 100000000) / 100000000 : (totalQuantityUntilDate * 100000000 - transaction.quantity * 100000000) / 100000000;\n      if (totalQuantityUntilDate < 0) {\n        return 1;\n      }\n    }\n    return 0;\n  }\n\n  inputDecimalSetter = (value, scale) => {\n    if (scale === 0) {\n      if (value.indexOf(\".\") >= 0) {\n        return value.substr(0, value.indexOf(\".\"));\n      } else if (value.indexOf(\",\") >= 0) {\n        return value.substr(0, value.indexOf(\",\"));\n      } else {\n        return value;\n      }\n    }\n    if (value.indexOf(\".\") >= 0) {\n      return value.substr(0, value.indexOf(\".\")) + value.substr(value.indexOf(\".\"), scale + 1);\n    } else if (value.indexOf(\",\") >= 0) {\n      return value.substr(0, value.indexOf(\",\")) + value.substr(value.indexOf(\",\"), scale + 1);\n    } else {\n      return value;\n    }\n  }\n\n  render() {\n    let Page = \"\";\n    let pricesClass = \"menu-item active-menu-item\";\n    let portfoliosClass = \"menu-item\";\n\n    if (this.state.page === \"Login\") {\n      Page = <Login\n        loginMessage={this.state.loginMessage}\n        errorMessage={this.state.errorMessage}\n        handleUserLogin={this.handleUserLogin}\n        handleUserRegister={this.handleUserRegister}\n        getUserData={this.getUserData}\n      />;\n    }\n    if (this.state.page === \"Prices\") {\n      Page = <Prices makePopupVisible={this.makePopupVisible}\n        loggedInUser={this.state.loggedInUser}\n        currentWatchlist={this.state.currentIndexes.watchlist}\n        setCurrentIndex={this.setCurrentIndex}\n        coinListCreator={this.coinListCreator}\n        priceConverter={this.priceConverter}\n        priceColorSetter={this.priceColorSetter}\n        dataSort={this.state.dataSort}\n        handleDataSort={this.handleDataSort}\n        compareFunction={this.compareFunction}\n      />;\n      pricesClass = \"menu-item active-menu-item\";\n      portfoliosClass = \"menu-item\";\n    }\n    if (this.state.page === \"Portfolios\") {\n      Page = <Portfolios makePopupVisible={this.makePopupVisible}\n        loggedInUser={this.state.loggedInUser}\n        currentPortfolio={this.state.currentIndexes.portfolio}\n        setCurrentIndex={this.setCurrentIndex}\n        coinFinder={this.coinFinder}\n        amountConverter={this.amountConverter}\n        priceColorSetter={this.priceColorSetter}\n        dataSort={this.state.dataSort}\n        handleDataSort={this.handleDataSort}\n        compareFunction={this.compareFunction}\n      />;\n      pricesClass = \"menu-item\";\n      portfoliosClass = \"menu-item active-menu-item\";\n    }\n\n    let pricesGuidePopup = \"\";\n    if (this.state.popups.PricesGuide) {\n      pricesGuidePopup = <PricesGuide makePopupVisible={this.makePopupVisible}\n        loggedInUser={this.state.loggedInUser} />\n    }\n\n    let portfoliosGuidePopup = \"\";\n    if (this.state.popups.PortfoliosGuide) {\n      portfoliosGuidePopup = <PortfoliosGuide makePopupVisible={this.makePopupVisible} />\n    }\n\n    let pricesSettingsPopup = \"\";\n    if (this.state.popups.PricesSettings) {\n      pricesSettingsPopup = <PricesSettings makePopupVisible={this.makePopupVisible}\n        handleCurrencyChange={this.handleCurrencyChange}\n        loggedInUser={this.state.loggedInUser} />\n    }\n\n    let addWatchlistPopup = \"\";\n    if (this.state.popups.AddWatchlist) {\n      addWatchlistPopup = <AddWatchlist makePopupVisible={this.makePopupVisible}\n        handleCreateNewWatchlist={this.handleCreateNewWatchlist}\n        errorMessage={this.state.errorMessage}\n        clearErrorMessage={this.clearErrorMessage}\n      />\n    }\n\n    let addPortfolioPopup = \"\";\n    if (this.state.popups.AddPortfolio) {\n      addPortfolioPopup = <AddPortfolio makePopupVisible={this.makePopupVisible}\n        handleCreateNewPortfolio={this.handleCreateNewPortfolio}\n        errorMessage={this.state.errorMessage}\n        clearErrorMessage={this.clearErrorMessage}\n      />\n    }\n\n    let editWatchlistPopup = \"\";\n    if (this.state.popups.EditWatchlist) {\n      editWatchlistPopup = <EditWatchlist makePopupVisible={this.makePopupVisible}\n        errorMessage={this.state.errorMessage}\n        clearErrorMessage={this.clearErrorMessage}\n        loggedInUser={this.state.loggedInUser}\n        currentWatchlist={this.state.currentIndexes.watchlist}\n        coins={this.state.coins}\n        coinListCreator={this.coinListCreator}\n        deleteWatchlistItem={this.deleteWatchlistItem}\n        addWatchlistItem={this.addWatchlistItem}\n        renameWatchlist={this.renameWatchlist}\n        deleteWatchlist={this.deleteWatchlist}\n        compareFunction={this.compareFunction}\n      />\n    }\n\n    let editPortfolioPopup = \"\";\n    if (this.state.popups.EditPortfolio) {\n      editPortfolioPopup = <EditPortfolio makePopupVisible={this.makePopupVisible}\n        errorMessage={this.state.errorMessage}\n        clearErrorMessage={this.clearErrorMessage}\n        loggedInUser={this.state.loggedInUser}\n        currentPortfolio={this.state.currentIndexes.portfolio}\n        renamePortfolio={this.renamePortfolio}\n        deletePortfolio={this.deletePortfolio}\n      />\n    }\n\n    let editAssetPopup = \"\";\n    if (this.state.popups.EditAsset) {\n      editAssetPopup = <EditAsset makePopupVisible={this.makePopupVisible}\n        errorMessage={this.state.errorMessage}\n        loggedInUser={this.state.loggedInUser}\n        currentPortfolio={this.state.currentIndexes.portfolio}\n        currentAsset={this.state.currentIndexes.asset}\n        coinFinder={this.coinFinder}\n        addTransactionToPortfolio={this.addTransactionToPortfolio}\n        deleteAsset={this.deleteAsset}\n        deleteTransaction={this.deleteTransaction}\n        setCurrentIndex={this.setCurrentIndex}\n        priceConverter={this.priceConverter}\n        valueConverter={this.valueConverter}\n        amountConverter={this.amountConverter}\n        priceColorSetter={this.priceColorSetter}\n        compareFunction={this.compareFunction}\n        transactionQuantityChecker={this.transactionQuantityChecker}\n        inputDecimalSetter={this.inputDecimalSetter}\n      />\n    }\n\n    let buySellAssetPopup = \"\";\n    if (this.state.popups.BuySellAsset) {\n      buySellAssetPopup = <BuySellAsset makePopupVisible={this.makePopupVisible}\n        errorMessage={this.state.errorMessage}\n        loggedInUser={this.state.loggedInUser}\n        currentPortfolio={this.state.currentIndexes.portfolio}\n        coinFinder={this.coinFinder}\n        coins={this.state.coins}\n        addTransactionToPortfolio={this.addTransactionToPortfolio}\n        compareFunction={this.compareFunction}\n        transactionQuantityChecker={this.transactionQuantityChecker}\n        inputDecimalSetter={this.inputDecimalSetter}\n      />\n    }\n\n    let editTransactionPopup = \"\";\n    if (this.state.popups.EditTransaction) {\n      editTransactionPopup = <EditTransaction makePopupVisible={this.makePopupVisible}\n        errorMessage={this.state.errorMessage}\n        loggedInUser={this.state.loggedInUser}\n        currentPortfolio={this.state.currentIndexes.portfolio}\n        currentAsset={this.state.currentIndexes.asset}\n        currentTransaction={this.state.currentIndexes.transaction}\n        coinFinder={this.coinFinder}\n        editTransaction={this.editTransaction}\n        transactionQuantityChecker={this.transactionQuantityChecker}\n        inputDecimalSetter={this.inputDecimalSetter}\n      />\n    }\n\n    let scrollable = \"scrollable\";\n    for (let popup in this.state.popups) {\n      if (this.state.popups[popup]) {\n        scrollable = \"unscrollable\";\n        break\n      }\n    }\n\n    return (\n      <div className={`main-container ${scrollable}`}>\n        <header>\n          <nav>\n            <ul>\n              <li className=\"logout-item\" onClick={this.handleUserLogout}>Logout</li>\n            </ul>\n            <ul className=\"menu-container\">\n              <li className={pricesClass} onClick={() => this.handlePageChange(\"Prices\")}>Prices</li>\n              <li className={portfoliosClass} onClick={() => this.handlePageChange(\"Portfolios\")}>Portfolios</li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          {portfoliosGuidePopup}\n          {pricesSettingsPopup}\n          {pricesGuidePopup}\n          {addWatchlistPopup}\n          {editWatchlistPopup}\n          {addPortfolioPopup}\n          {editPortfolioPopup}\n          {editAssetPopup}\n          {buySellAssetPopup}\n          {editTransactionPopup}\n          {Page}\n        </main>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}